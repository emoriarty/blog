<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.5">Jekyll</generator><link href="http://enrq.me/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://enrq.me/blog/" rel="alternate" type="text/html" /><updated>2018-07-20T01:22:32+02:00</updated><id>http://enrq.me/blog/</id><title type="html">Afilando piedras</title><subtitle>En este blog está dedicado a conceptos, ideas y soluciones a cuestiones relacionados con la programación, orientado principalmente a Front-end.
</subtitle><entry><title type="html">Principio de responsabilidad única</title><link href="http://enrq.me/blog/principio-responsabilidad-unica" rel="alternate" type="text/html" title="Principio de responsabilidad única" /><published>2018-03-29T07:00:00+02:00</published><updated>2018-03-29T07:00:00+02:00</updated><id>http://enrq.me/blog/principio-responsabilidad-unica</id><content type="html" xml:base="http://enrq.me/blog/principio-responsabilidad-unica">&lt;p&gt;En un &lt;a href=&quot;/blog/pure-function&quot;&gt;artículo anterior&lt;/a&gt; tratábamos el tema de las funciones puras. El texto introduce de manera implícita el concepto de responsabilidad única sin apenas profundizar en él. Entender la importancia de esta patrón de diseño me ha parecido lo suficientemente interesante como para dedicarle un &lt;em&gt;spin-off&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Si consideramos las funciones puras como los bloques fundamentales sobre los que construir un programa, es de esperar que éstos sean lo más robustos posible. La fiabilidad de estos elementos no solo serán testadas minuciosamente sino que también se construirán siguiendo una serie de patrones.&lt;/p&gt;

&lt;p&gt;Entre estos patrones se encuentra el &lt;a href=&quot;https://www.wikiwand.com/es/Principio_de_responsabilidad_%C3%BAnica&quot;&gt;principio de responsabilidad única&lt;/a&gt; o &lt;em&gt;SRP&lt;/em&gt; (&lt;em&gt;single responsible principle&lt;/em&gt;) en sus siglas inglesas. Según esta norma no se permite que una función tenga mayor propósito que el indicado. Es decir, si su cometido es capitalizar todas las letras de un texto, solo ejecuta esa tarea exclusivamente, cualquier otra acción debe que se derive de este proceso debe ser extraído a otra función. Mediante este diseño se pretende evitar los posibles comportamientos inesperados de una función multipropósito.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showBookPreview&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;middleName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;middle&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;middle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;middle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstChapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chapters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstChapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;\&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;\&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;\&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;middleName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\
&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/header&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\
&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstChapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/article&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Es evidente al ver el ejemplo anterior que la función cumple pocas convenciones además de contener varias operaciones claramente diferenciadas. Por lo tanto showBookPreview está imcumpliendo el patrón de responsabilidad única.&lt;/p&gt;

&lt;p&gt;Aunque yo haya escrito el ejemplo, hace tantas cosas el cuerpo de esta función que me cuesta seguirla y eso que no es más que manipular un texto y generar un nuevo resultado. Nada del otro mundo. El código podría complicar aún más si se ampliase su funcionalidad mediante accesos a BBDD, llamadas a API, resultados asíncronos, etcétera. Si a esto le sumamos la falta de familiaridad pasado un tiempo sin trabajar sobre el fuente, me encontraré a mí mismo intentando descifrar que hace exáctamente la susodicha con la consecuente pérdida de tiempo. Ni cabe que decir que cualquier otro que la encuentre por primera vez invertirá más tiempo que el propio autor. A la larga este tipo de funciones hormonadas terminan teniendo un impacto negativo en la productividad del equipo. Incluso aunque esté formado por un solo desarrollador. Hay un término que aunque su contexto sea más amplio sirve a la perfección para denominar este tipo de fuente: &lt;a href=&quot;https://es.wikipedia.org/wiki/C%C3%B3digo_espagueti&quot;&gt;código espagueti&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una pregunta que puede surgir en referencia a esta función es ¿Qué pasa si necesitamos presentar la vista preliminar en otro formato? Por lo visto tendremos que crear otra función que haga lo mismo aunque variando el formato devuelto. Obviamente no es la solución idónea. Estaríamos duplicando el mismo proceso en distintas partes del programa. Esto conlleva un mayor mantenimiento además de imcumplir otro principio tan importante como DRY (&lt;em&gt;Don’t Repeat Yourself&lt;/em&gt;) o simplemente &lt;a href=&quot;https://es.wikipedia.org/wiki/No_te_repitas&quot;&gt;no te repitas&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Debido a un diseño pobre esta función está mal construida desde su base. Para solucionarlo vamos a utilizar el patrón que estamos tratando en el artículo. Lo primero que debemos hacer es localizar las distintas operaciones que se efectúan en la función. Una vez localizadas las extraeremos en sus respectivas funciones.&lt;/p&gt;

&lt;p&gt;Lo primero que nos interesa es poder presentar la vista previa del libro en diferentes formatos. Esta acción transformadora se lleva a cabo en la parte inferior del cuerpo, justo donde empieza la cláusula return. Una aproximación de esta &lt;a href=&quot;https://www.wikiwand.com/es/Separaci%C3%B3n_de_intereses&quot;&gt;separación de conceptos&lt;/a&gt; (SoC) sería la siguiente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getBookExcerpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;middleName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;middle&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;middle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;middle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstChapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chapters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstChapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;middleName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstChapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bien, ahora tenemos una función que tan solo devuelve un objeto con el extracto del libro. Todavía no cumple el principio de responsabilidad única al completo y sigue siendo ilegible pero al menos ya podemos decir que es reutilizable. El siguiente paso es crear la función que transforme el objeto en HTML.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;\&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;\&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;\&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\
&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/header&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\
&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/article&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A diferencia de &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;getBookExcerpt&lt;/span&gt;&lt;/code&gt;, &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;toHTML&lt;/span&gt;&lt;/code&gt; si cumple con el principio de responsabilidad única. Su sola operación es formatear el dato entrante y devolver el resultado. Combinando las dos funciones obtendremos el siguiente código.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;toHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Además de haber reducido los cuerpos de las funciones, la combinación de éstas resulta en una llamada mucho más compresible. De hecho no tendría necesidad de acudir a la implementación de cada para entender exactamente qué está ocurriendo: a partir de un libro se extrae un fragmento y se transforma a HTML. Más claro, agua.&lt;/p&gt;

&lt;p&gt;Otra de las ventajas que resultan de esta práctica es que ahora es más fácil ampliar el alcance del programa. Si surge la necesidad de devolver el fragmento del libro en distintos formatos tan solo habría que crear las funciones correspondiente para cada caso. El único requisito es que acepten el objeto devuelto por &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;getBookExcerpt&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toYAML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;exceprt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;La función &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt;&lt;/code&gt; se puede abreviarse incluso más eliminando la función que la contiene. Tan solo asignaremos la función stringify que es lo que nos interesa a la variable &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;De hecho no haría falta crear la variable &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt;&lt;/code&gt;, tan solo bastaría utilizar la función &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;/code&gt; disponible en el ámbito global. Pero por una cuestión de coherencia textual es mejor mantener un nombre similar al resto de funciones de la misma familia.&lt;/p&gt;

&lt;p&gt;Con estos nueva gama de funciones podemos otra contenga una nueva operación: seleccionar que tipo de formato transforma el extracto del libro.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transformBookExcerpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getBookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'yaml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toYAML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Por supuesto, esto es solo un ejemplo para ver los beneficios que aporta la utilización de funciones de único propósito. En una situación real las funciones de transformación como &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;toHTML&lt;/span&gt;&lt;/code&gt; o &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;toYAML&lt;/span&gt;&lt;/code&gt; serían algo más complejas. Incluso los nombres no serían los apropiados, deberían ser más explicativos. Podrían llamarse algo así como &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;bookExcerptTo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formato&lt;/span&gt;&lt;/code&gt;. De todas formas insisto en la finalidad meramente ilustrativa del ejemplo.&lt;/p&gt;

&lt;p&gt;Todavía queda pendiente terminar de refactorizar &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;getBookExcerpt&lt;/span&gt;&lt;/code&gt;. Si observamos tanto el título como el nombre del autor se capitalizan de la misma manera. Claramente esto es otra operación que puede extraerse.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;capitalize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Una vez extraído &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;getBookExcerpt&lt;/span&gt;&lt;/code&gt; queda de la siguiente forma.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getBookExcerpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;capitalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;capitalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;middleName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;capitalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;middle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;capitalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstChapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chapters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstChapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;middleName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstChapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;excerpt&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Con estos cambios tenemos un fuente mucho más asequible para cualquier neófito.  También hemos creado una serie de funciones reutilizables en cualquier parte del programa. Cabe destacar que a su vez estos bloques son más fácilmente testables al haber reducido el objetivo de la función original a un sola tarea.&lt;/p&gt;

&lt;p&gt;En definitiva, esta particularidad de único propósito permite convertir las funciones en bloques de código reusable y fácil comprensión. Así que cuando abordemos una nueva funcionalidad, no está de más reescribirla hasta conseguir aislar todas aquellas partes que puedan ser reusables.&lt;/p&gt;

&lt;p&gt;También es recomendable si trabajas dentro de un equipo y no tienes un claro conocimiento del proyecto, antes de abordar una nueva funcionalidad es mejor preguntar a otro miembro más veterano si alguna de las acciones que vas a abordar ya estuviera hecha. Recuerda que no hay que repetirse.&lt;/p&gt;

&lt;h2 id=&quot;fuentes&quot;&gt;Fuentes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://codeburst.io/understanding-solid-principles-single-responsibility-b7c7ec0bf80&quot;&gt;codeburst.io/understanding-solid-principles-single-responsibility-b7c7ec0bf80&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.toptal.com/software/single-responsibility-principle&quot;&gt;toptal.com/software/single-responsibility-principle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oodesign.com/single-responsibility-principle.html&quot;&gt;oodesign.com/single-responsibility-principle.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="programacion-funcional" /><category term="diseño" /><category term="patrones" /><category term="terminos-informaticos" /><summary type="html">Parte de un buen diseño se debe a la utilización de varios patrones durante el desarrollo de un programa. Uno de lo más útiles y fáciles de implementar es el principio de responsabilidad única.</summary></entry><entry><title type="html">Pure Function</title><link href="http://enrq.me/blog/pure-function" rel="alternate" type="text/html" title="Pure Function" /><published>2018-03-20T01:00:00+01:00</published><updated>2018-03-20T01:00:00+01:00</updated><id>http://enrq.me/blog/pure-function</id><content type="html" xml:base="http://enrq.me/blog/pure-function">&lt;p&gt;La programación funcional es un término que en los últimos años ha tomado cierta relevancia en el mundo de la programación. También otros paradigmas como concurrencia fiable o componentización están en boga. Todos estos conceptos tienen su base en una serie de patrones y cualidades del lenguaje que los hacen posibles. Entre estos pautas se encuentran las funciones puras.&lt;/p&gt;

&lt;p&gt;Una &lt;strong&gt;función pura&lt;/strong&gt; no es más que una función que recibe un valor y devuelve siempre el mismo resultado en base a un cálculo. Hay un tipo de función basada en la &lt;a href=&quot;https://es.wikipedia.org/wiki/M%C3%B3nada_(programaci%C3%B3n_funcional)?oldformat=true#M%C3%B3nada_identidad&quot;&gt;mónada identidad&lt;/a&gt; donde este cálculo es inexistente, retornando el mismo valor de entrada, pero esto es otro tema.&lt;/p&gt;

&lt;p&gt;Otro aspecto importante es que la ejecución de una función no tenga ningún tipo de efecto secundario sobre el estado global del programa. Esto evita comportamientos inesperados que podrían derivar en errores de difícil hallazgo.&lt;/p&gt;

&lt;p&gt;Aunque antes de profundizar en las características que ofrece este tipo de funciones, valdría la pena saber exactamente de donde proceden. Para ello hay que volver a abrir esos polvorientos apuntes de matemáticas que siempre pensaste que no servirían de nada.&lt;/p&gt;

&lt;h2 id=&quot;origen&quot;&gt;Origen&lt;/h2&gt;

&lt;p&gt;Como antes mencioné, el origen de las funciones se encontra en las matemáticas. Principalmente en cálculo analítico y álgebra. La definición general propuesta es la siguiente.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;El concepto general de Función, aplicación o mapeo se refiere a una regla que asigna a cada elemento de un primer conjunto un único elemento de un segundo conjunto &lt;sup&gt;&lt;a href=&quot;/blog/pure-function#quote-1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A continuación se muestra otra interpretación diferente.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Una función es una relación especial entre valores. Cada valor de entrada devuelve el mismo valor de salida.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Según estas dos explicaciones, si una determinada función recibe como valor de entrada 1 y devuelve 2, se espera que cada vez que reciba un valor 1 deberá retornar siempre el mismo valor de salida esperado: 2. Lo mismo ocurrirá con cualquier otro combinación.&lt;/p&gt;

&lt;p&gt;Si atendemos a la primera descripción, veremos que una función también se puede llamar aplicación o mapeo. Este último nombre dado ofrece una imagen clara de lo que debería ser una función tanto en matemáticas como en programación. Por mapeo entendemos una relación unívoca entre distintos elementos.&lt;/p&gt;

&lt;table class=&quot;table-half arrows-table&quot;&gt;
&lt;tr&gt;
&lt;td&gt;1 =&amp;gt; 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2 =&amp;gt; 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3 =&amp;gt; 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4 =&amp;gt; 8&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Como puede observarse en la tabla, cada elemento de la columna izquierda tiene su único equivalente en la columna derecha. Esta relación también se puede expresar mediante la siguiente función matemática.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;f&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; x·2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A todos nos sonará la expresión anterior de cuando estudiábamos en el instituto. Pues bien, en programación se definiría de una manera no mucho más diferente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;La función de este ejemplo está escrita en Javascript. En lo referente a funciones no importa el lenguaje utilizado, si bien alguna pequeña particularidad pueda haber entre ellos, a todos los efectos aplica el mismo concepto.&lt;/p&gt;

&lt;p&gt;Siguiendo con los ejemplos anteriores, en ambos casos si el valor utilizado de la columna izquierda se pasa como argumento a la función, el resultado será el valor adyacente a la derecha. Cualquier otro valor devuelto no cumpliría con la descripción de una función para esa tabla.&lt;/p&gt;

&lt;p&gt;Otra de la características de las funciones en matemáticas es su representación cartesiana. El valor de entrada (x) suele corresponder a la horizontal del plano, mientras que el resultado (y) pertenece a su vertical. Una relación como en la tabla anterior genera una línea recta en el gráfico cartesiano (x, y). A esta función se la nombra función lineal.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder picture-shrink&quot; data-large=&quot;/assets/pure-function-1.jpg&quot;&gt;
    &lt;img src=&quot;/assets/pure-function-1.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Función lineal sobre plano cartesiano.&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 100.48465266558966%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Aunque en raras ocasiones generamos este tipo de gráficos, la capacidad de interpretar estos valores como componentes que conforman un gráfico permite conceptualizar estos resultados en otros ámbitos. En programación funcional a esta relación entre x e y también se le llama morfismo. Lo cual no es más que otra forma de describir como un conjunto de valores es mapeado a otro conjunto.&lt;/p&gt;

&lt;p&gt;Que el origen de las funciones esté en las matemáticas, no significa que uno deba haber obtenido un doctorado para entenderlas. Si es cierto que es recomendable tener un conocimiento mínimo en la materia. En ciertas ocasiones podrías encontrarte con algún problema de solución matemática y no saber resolverlo por no tener el bagaje necesario.&lt;/p&gt;

&lt;p&gt;La gran diferencia entre ambas disciplinas estriba en que las funciones en matemáticas sirven exclusivamente a un solo propósito. En programación pueden tener diferentes usos. En la mayoría de las ocasiones se utilizan para realizar procesos completos, que por su naturaleza arbitraria permite la ausencia o presencia múltiple de parámetros. También puede devolver diferentes resultados en base a un mismo argumento. Esta cualidad procedimental de las funciones es la que se pretende evitar mediante programación funcional. Para ello se acuñó el término función pura, que no es más que el uso específico de la funciones sea el mismo que en matemáticas.&lt;/p&gt;

&lt;p&gt;¿Y qué beneficio aporta una función pura ante una convencional? Podrías estar preguntándote. Para responder a esta pregunta, se expone más abajo una serie de características que muestran porqué favorecer el uso este tipo de funciones.&lt;/p&gt;

&lt;h2 id=&quot;cacheable&quot;&gt;Cacheable&lt;/h2&gt;

&lt;p&gt;Ahora sabemos que en base a un valor de entrada, una función pura siempre devuelve el mismo resultado. Podemos aprovechar esta cualidad para almacenar en memoria el resultado, utilizando el argumento como identificador. Cada vez que se invoque la misma función, con un parámetro previamente utilizado, devolverá el resultado almacenado. De esta forma se mejora el rendimiento de una función, evitando repetir el mismo cálculo cuando se conoce de antemano el resultado para un dato de entrada.&lt;/p&gt;

&lt;p&gt;A esta técnica de optimización se la conoce en programación como &lt;em&gt;&lt;a href=&quot;https://www.interviewcake.com/concept/java/memoization&quot;&gt;memoization&lt;/a&gt;&lt;/em&gt; (o &lt;em&gt;memoisation&lt;/em&gt; en inglés de las islas).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memoize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cacheId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cacheId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cacheId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cacheId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;La función anterior espera recibir una función &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;/code&gt; como argumento. Una vez ejecutada devuelve una función anónima que contiene la operación de cacheo. Esta nueva función, a partir del conjunto de argumentos recibido, crea el identificador de almacenamiento en la variable &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;cacheId&lt;/span&gt;&lt;/code&gt;. Si el contenido de esta variable tiene asociado un valor en el objeto &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;/code&gt;, devuelve el resultado anteriormente calculado. En caso contrario, ejecuta la función original y se guarda el producto obtenido junto al nuevo identificador en el objeto &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cachedBy2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memoize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;by2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cachedBy2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cachedBy2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4 returned from cache object&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cachedBy2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 8&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cachedBy2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 8 returned from cache object&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;No solamente se puede almacenar resultados de tipo primitivo. También tienen cabida objetos, &lt;em&gt;arrays&lt;/em&gt; incluso otras funciones (realmente éstas no dejan de ser un tipo de objeto específico).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetchBooksByGenre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;genre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;genre&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; 
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetchThrillerBooks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memoize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetchBooksByGenre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/api/books/by/thriller'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetchBioBooks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memoize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetchBooksByGenre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/api/books/by/bio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Las funciones anteriores no es que sean la mar de útiles. En cierto modo cada vez que se vaya a conformar una función por género ya almacenada, será devuelta desde cache.&lt;/p&gt;

&lt;h2 id=&quot;portabilidad&quot;&gt;Portabilidad&lt;/h2&gt;

&lt;p&gt;Se considera que una función es portable cuando su contexto queda totalmente aislado. Ninguna referencia externa es necesaria para su funcionamiento, a excepción de las suministradas mediante argumentos. La ventaja que ofrece este tipo de función autocontenida es que se puede transportar de un proyecto a otro sin necesidad de modificación.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// forma impura&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;saveBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;notifySuccess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;notifyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// forma pura&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bookAttrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;saveBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bookAttrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;notifySuccess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;notifyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En este ejemplo se puede ver la misma función en su variante pura e impura. Mientras que la versión impura sólo recibe un argumento con los valores para crear un nuevo libro, la segunda incluye también una conexión a base de datos y un email dónde notificar la acción llevada a cabo o el error ocurrido.&lt;/p&gt;

&lt;p&gt;Aunque en apariencia la diferencia es poca cosa, varias lecturas surgen con este pequeño cambio.&lt;/p&gt;

&lt;p&gt;En el caso de la función pura es mucho más informativa puesto que se revela su propósito desde la misma firma del contrato. Al contrario que la impura que dificulta si comprensión al ocultar estos detalles.&lt;/p&gt;

&lt;p&gt;Por otro lado, al haber parametrizado los clientes de base de datos y correo se ha creado una función mucho más flexible que la anterior. Si por algún motivo se debe cambiar la base de datos, pues se transfiere un nuevo cliente a la función y listo.&lt;/p&gt;

&lt;p&gt;También se puede utilizar en otros proyectos que requieran la misma funcionalidad, solo habría que copiar y pegar el código.&lt;/p&gt;

&lt;p&gt;Incluso si el tipo de lenguaje lo permite, como es el caso de Javascript, una función así podría ser serializada y enviarse a través de un socket para terminar siendo ejecutada remotamente.&lt;/p&gt;

&lt;h2 id=&quot;inmutabilidad&quot;&gt;Inmutabilidad&lt;/h2&gt;

&lt;p&gt;Una de las condiciones indispensables para construir un sistema robusto, es evitar las alteraciones inesperadas de sistema. Todo programa mantiene un estado global compartido entre los diferentes objetos que lo componen. Las interacciones entre ellos, o con el exterior, modifican este estado que termina reflejándose entre las distintas partes del sistema. Estos cambios conforman el flujo esperado del programa y cualquier mutación no controlada puede convertirse en &lt;em&gt;bugs&lt;/em&gt; de difícil localización.&lt;/p&gt;

&lt;p&gt;Un caso muy concreto de este tipo de errores ocurre cuando se transfiere una variable a una función. No es su valor lo que recibe la función sino su referencia. Una dirección que apunta donde se encuentra el contenido de la misma. Cualquier acción llevada a cabo sobre esta variable que modifique su valor, se verá reflejado en otra parte del sistema que esté utilizando esa misma referencia.&lt;/p&gt;

&lt;p&gt;Este efecto secundario, en ocasiones esperado, suele ser fuente de problemas. Para prevenir estas situaciones es mejor generar una nuevo resultado a partir de la variable proporcionada.&lt;/p&gt;

&lt;p&gt;Un efecto secundario no es solo la modificación de una variable. También lo es lanzar excepciones, llamar a otras funciones desde una otra función, leer o escribir datos en disco,  acceso a base de datos, accesos a otras redes, datos introducidos por un usuario. Si pretendemos evitar todas estas acciones obtendremos el programa más robusto del mundo. Aunque en su contrapartida no sería más que una caja estanca que no sirve para nada.&lt;/p&gt;

&lt;p&gt;Puesto que restringir todos los efectos secundarios en la práctica es inviable, al menos podemos contenerlos evitando mutaciones innecesarias. De esta manera se minimizaría su impacto en el estado del sistema.&lt;/p&gt;

&lt;p&gt;Como ya se ha apuntado antes, la mejor forma de prevenir estas mutaciones en una función es no modificar los parámetros de entrada. Tan solo se deben utilizar para realizar la operación propuesta y devolver un nuevo valor.&lt;/p&gt;

&lt;p&gt;Incluso en sistemas que permiten la ejecución multihilo, esta condición de inmutabilidad posibilita la ejecución en paralelo de una misma función. De esta manera se evitan situaciones que podrían derivar condiciones de &lt;a href=&quot;https://www.wikiwand.com/es/Condici%C3%B3n_de_carrera&quot;&gt;secuencia (race condition)&lt;/a&gt; al haber alterado la memoria compartida.&lt;/p&gt;

&lt;h2 id=&quot;transparencia-referencial&quot;&gt;Transparencia referencial&lt;/h2&gt;

&lt;p&gt;Se llama transparencia referencial a la circunstancia que permite sustituir el nombre de la función (su llamada) por el cuerpo de la misma sin alterar el comportamiento del programa.&lt;/p&gt;

&lt;p&gt;Puesto que la condición indispensable de una función pura es que siempre devuelva el mismo valor de salida para un mismo dato de entrada, podemos considerar que se cumple esta propiedad si el intercambio de ambas partes no falla.&lt;/p&gt;

&lt;p&gt;Pongamos por ejemplo el siguiente fuente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'9788433920638'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Post Office'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Charles Bukowski'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rateBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stars&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;finishBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;finished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findBookIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bookItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findBookIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)];&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isBookPresent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;findBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addBookToShelve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isBookPresent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addBookToShelve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rateBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;finishBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Todas las funciones son supuestamente puras. Si no fuera así la sustitución de la llamada por el contenido no funcionará.&lt;/p&gt;

&lt;p&gt;Si observamos la última línea encontramos tres llamadas a función anidadas entre si. Para poder comprobar si son transparentemente referenciales (ojo al vocablo) sustituyamos la más interna (la primera en ejecutarse) en la secuencia: &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;finishBook&lt;/span&gt;&lt;/code&gt;. Pero antes estructuremos un poco más el código para ver mejor el cambio realizado.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;addBookToShelve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;rateBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;finishBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sustituyendo finishBook por su contenido quedaría como se muestra a continuación.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;addBookToShelve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;rateBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;finished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si ejecutamos el código anterior deberá seguir funcionando como se espera. Ahora le toca el turno a la función &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;rateBook&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;addBookToShelve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;finished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Y así podríamos seguir hasta haber sustituido todas las funciones.&lt;/p&gt;

&lt;p&gt;Obviamente esta no es una práctica que vayamos a utilizar para comprobar todo el fuente en cualquier proyecto medianamente grande. El resultado final podría ser un galimatías muy serio. Por tanto, la transparencia referencial, no tiene mayor utilidad que durante el proceso de desarrollo. Nos permite poder comprobar el comportamiento, fiabilidad y pureza de una función en base al intercambio de su cuerpo por la llamada.&lt;/p&gt;

&lt;p&gt;No sería un mal ejercicio completar  por tu cuenta el intercambio de llamadas a función por su contenido. Cuando lo tengas hecho comprueba que el resultado sea el mismo que cuando se ejecutó el fuente original.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;9788433920638&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Post Office&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Charles Bukowski&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;finished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;p&gt;Puesto que una función pura no depende de ningún tipo de recurso externo, facilita su ejecución en cualquier tipo de contexto. Este carácter independiente permite probar una función sin necesidad de simular el entorno ni el uso de terceros ni grandes configuraciones. Solamente deberemos proveer el valor (o valores) necesario de entrada y comprobar su resultado.&lt;/p&gt;

&lt;p&gt;Continuando con el ejemplo anterior, para comprobar que la función &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;addBook&lt;/span&gt;&lt;/code&gt; añade un libro correctamente, podemos crear un archivo similar al mostrado a continuación.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addBook&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../src/addBook'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mockedBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Mocked title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Mocked author'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mockedLibrary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;addBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mockedLibrary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mockedBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mockedBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Adds book to library successfully'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Book is not being added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lógicamente lo más interesante es poder generar informes con todas las pruebas, así que lo suyo sería utilizar una librería que simplifique esta labor. Por ejemplo, podemos usar &lt;em&gt;&lt;a href=&quot;https://github.com/substack/tape&quot;&gt;tape&lt;/a&gt;&lt;/em&gt; como solución sencilla u otra más completa como &lt;em&gt;&lt;a href=&quot;https://facebook.github.io/jest/&quot;&gt;jest&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;El auge de la programación funcional también está influyendo en campos como el &lt;em&gt;&lt;a href=&quot;https://medium.com/javascript-inside/generative-testing-in-javascript-f91432247c27&quot;&gt;testing&lt;/a&gt;&lt;/em&gt;. Una de las propuestas más prometedoras se llama generative testing. Este nuevo enfoque se basa en la generación automática de los argumentos de entrada. A diferencia del método tradicional, basado en suposiciones comunes, mediante esta técnica se pretende identificar los casos de uso no contemplados y así poder completar el alcance de una función.&lt;/p&gt;

&lt;p&gt;Recuerda que este tipo estrategia no son sustitutivas. Sin embargo usadas en combinación pueden aportar grandes beneficios.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;No he redactado todas la cualidades que ofrecen las funciones puras. He elegido aquellas que he considerado más oportunas en base a su uso más práctico durante el desarrollo diario. Espero que tras haber leído el artículo comprendas los beneficios que aporta el uso de funciones puras y cuándo utilizarlas.&lt;/p&gt;

&lt;p&gt;Es importante remarcar que este patrón se utiliza principalmente bajo un marco funcional. Esto no significa que no podamos utilizarlo en contextos más imperativos. De hecho la cualidad más importante, como se ha apuntado anteriormente, es la independencia ante cualquier tipo de paradigma.&lt;/p&gt;

&lt;p&gt;Así que a qué esperas, cada vez que tengas la oportunidad, sin importar el lenguaje que utilices, favorece este tipo de función. A la larga comprobarás que es más práctico.&lt;/p&gt;

&lt;h2 id=&quot;referencias&quot;&gt;Referencias&lt;/h2&gt;

&lt;ul&gt;
  &lt;li id=&quot;quote-1&quot;&gt;
    &lt;a href=&quot;https://es.wikipedia.org/wiki/Función_matemática&quot;&gt;
      Extraído del artículo función matemática de la wikipedia.
    &lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fuentes&quot;&gt;Fuentes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mathsisfun.com/sets/function.html&quot;&gt;mathsisfun.com/sets/function.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wikiwand.com/es/Funci%C3%B3n_matem%C3%A1tica&quot;&gt;wikiwand.com/es/Funci%C3%B3n_matem%C3%A1tica&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wikiwand.com/en/Functional_programming&quot;&gt;wikiwand.com/en/Functional_programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976&quot;&gt;medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wikiwand.com/en/Pure_function&quot;&gt;wikiwand.com/en/Pure_function&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions-4d4d5392d49c&quot;&gt;https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536&quot;&gt;medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://drboolean.gitbooks.io/mostly-adequate-guide-old/content/ch3.html&quot;&gt;drboolean.gitbooks.io/mostly-adequate-guide-old/content/ch3.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/getify/Functional-Light-JS/blob/master/manuscript/ch2.md/#chapter-2-the-nature-of-functions&quot;&gt;github.com/getify/Functional-Light-JS/blob/master/manuscript/ch2.md/#chapter-2-the-nature-of-functions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://henrikeichenhardt.blogspot.com.es/2013/06/why-shared-mutable-state-is-root-of-all.html&quot;&gt;henrikeichenhardt.blogspot.com.es/2013/06/why-shared-mutable-state-is-root-of-all.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="programacion-funcional" /><category term="diseño" /><category term="patrones" /><category term="terminos-informaticos" /><summary type="html">Las funciones puras permiten construir aplicaciones más robustas gracias a su carácter inmutable. También ofrecen una gran reusabiliad.</summary></entry><entry><title type="html">First class function</title><link href="http://enrq.me/blog/first-class-function" rel="alternate" type="text/html" title="First class function" /><published>2018-01-30T22:00:00+01:00</published><updated>2018-01-30T22:00:00+01:00</updated><id>http://enrq.me/blog/first-class-funtion</id><content type="html" xml:base="http://enrq.me/blog/first-class-function">&lt;p&gt;&lt;em&gt;First-class function&lt;/em&gt; es la cualidad por la que un lenguaje de programación puede tratar las funciones como si fueran cualquier otro tipo de objeto. Se entiende por objeto cualquier tipo de entidad que pueda asignarse a una variable, almacenarse en un &lt;em&gt;array&lt;/em&gt;, transferir como argumento e incluso ser devuelto como resultado de otra función.&lt;/p&gt;

&lt;p&gt;La idea en si proviene de otro concepto llamado &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/First-class_citizen&quot;&gt;first-class citizen&lt;/a&gt;&lt;/em&gt;. Este viene a decir que una entidad pueda soportar cualquier tipo de operación común disponible en otras entidades.&lt;/p&gt;

&lt;p&gt;En el ejemplo siguiente se muestra una función anónimo siendo asignada a una variable llamada &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;/code&gt;. El código mostrado es &lt;em&gt;Javascript&lt;/em&gt; pero lo mismo aplica para otros lenguajes que soporten esta característica.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si exponemos la variable podremos ver que el contenido es la función previamente definida.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// () =&amp;gt; &quot;Hello&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Al añadir los dos paréntesis al final de la variable se ejecuta la función, devolviendo el resultado que acompaña a la cláusula &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;/code&gt;. En el ejemplo se ha usado una función &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Funciones/Arrow_functions&quot;&gt;arrow&lt;/a&gt;&lt;/em&gt;, introducida en la versión &lt;em&gt;&lt;a href=&quot;http://es6-features.org&quot;&gt;ES6&lt;/a&gt;&lt;/em&gt; de &lt;em&gt;&lt;a href=&quot;https://es.wikipedia.org/wiki/ECMAScript&quot;&gt;ECMAScript&lt;/a&gt;&lt;/em&gt;. Entre las propiedades de esta nueva especificación permite devolver el resultado sin necesidad de incluir el comando &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;/code&gt;, tampoco el uso de llaves, cuando la función está contenida en una sola línea.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &quot;Hello&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Puesto que es una variable, también podemos utilizarla como argumento en otras funciones.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayHelloWorld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayHelloElia&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; Elia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sayHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &quot;Hello World&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sayHelloElia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &quot;Hello Elia&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Obviamente el ejemplo anterior está diseñado solamente para mostrar la transferencia de funciones como argumentos. Lo óptimo hubiese sido que &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;/code&gt; aceptase un parámetro y concatenase su valor con el cuerpo del resultado.&lt;/p&gt;

&lt;p&gt;Otro ejemplo donde también se hace uso de esta característica son los habituales &lt;em&gt;callbacks&lt;/em&gt; en &lt;em&gt;Javascript&lt;/em&gt;. Estos no dejan de ser funciones anónimas (en la mayoría de los casos) que se utilizan como argumentos. Este encadenamiento de funciones puede llevar a crear capas de abstracción innecesarias.&lt;/p&gt;

&lt;p&gt;Seguro que alguna vez te has encontrado algo parecido al siguiente fragmento de código. Siempre son otros los que hacen las cosas mal.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/user/1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En la supuesta llamada a un &lt;em&gt;API&lt;/em&gt; se describe una función anónima que puede recibir dos argumentos. El primero con los datos esperados y el segundo con el error. Pero en la función contenedora solo contiene un argumento. ¿Qué ocurriría si se produjese un error? Entonces debería modificarse todas las llamadas similares para aceptar este segundo argumento y suministrarlo a la función contenida &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;showData&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/user/1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Como veis es tontería. Hemos añadido una función que contiene a otra función que recibe el mismo número de argumentos. Por lo tanto, debemos eliminar este tipo de funciones &lt;em&gt;proxy&lt;/em&gt; que solo añaden complejidad al código además de retrasar la evaluación del mismo. El resultado correcto sería el siguiente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/user/1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Y así queda mucho más legible, sucinto y elegante.&lt;/p&gt;

&lt;p&gt;Otro caso interesante es asignar funciones de distintos objetos en entidades propias de la aplicación. En el ejemplo siguiente puede verse como se crea una entidad &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;/code&gt; que asigna por cada propiedad funciones pertenecientes a otros objetos. Esta característica permite crear entidades lógicas de manera fácil y menos verbosa. Al mismo tiempo se reutilizan funciones comunes reduciendo así los puntos donde podría provocarse un error.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destroyUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Et voilà!&lt;/em&gt; Con esto deberías haberte hecho una idea de que es una &lt;em&gt;First-class function&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Entre los lenguajes que lo soportan a parte del mencionado &lt;em&gt;Javascript&lt;/em&gt; estarían: &lt;em&gt;Haskell&lt;/em&gt;, &lt;em&gt;Python&lt;/em&gt;, &lt;em&gt;Scala&lt;/em&gt;, &lt;em&gt;Perl&lt;/em&gt;. En lenguajes imperativos como &lt;em&gt;C&lt;/em&gt; y &lt;em&gt;Java&lt;/em&gt; esta característica está soportada parcialmente.&lt;/p&gt;

&lt;p&gt;Otro asunto que aun no he mencionado y es por el que me he decidido a hacer este artículo (y otros que vendrán), es que la noción de que las funciones puedan ser tratadas como cualquier otro tipo de dato es la base de la programación funcional. Sin este recurso difícilmente podrían darse técnicas como &lt;em&gt;partial-application/currying&lt;/em&gt; o &lt;em&gt;closures&lt;/em&gt;, fundamentales para la composición de funciones. Un ejemplo podría ser el siguiente &lt;em&gt;snippet&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayWorld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayElia&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Elia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayHelloWorld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;compose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayHelloElia&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;compose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayElia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sayHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &quot;Hello World&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sayHelloElia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &quot;Hello Elia&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;compose&lt;/span&gt;&lt;/code&gt; es un tipo especial de función que puede conseguirse a través de librerías como &lt;em&gt;&lt;a href=&quot;http://ramdajs.com/docs/#compose&quot;&gt;Ramda&lt;/a&gt;&lt;/em&gt; o &lt;em&gt;&lt;a href=&quot;https://lodash.com/docs/4.17.4#flowRight&quot;&gt;Lodash&lt;/a&gt;&lt;/em&gt;. El propósito de esta función es generar nuevas funciones más complejas a partir de otras más sencillas que cumplen un único cometido (principio de responsabilidad única o &lt;em&gt;SRP&lt;/em&gt;). Pero esto es otro concepto que veremos en un futuro.&lt;/p&gt;

&lt;p&gt;Como puedes apreciar hemos generado dos funciones a partir de otras tres. De no ser por la propiedad &lt;em&gt;First-class function&lt;/em&gt; (entre otras cosas como &lt;em&gt;High order function&lt;/em&gt;) este tipo de código no sería posible.&lt;/p&gt;

&lt;p&gt;¡Y esto es todo por ahora! Más adelante iré compartiendo otros artículos sobre terminología en programación.&lt;/p&gt;

&lt;h2 id=&quot;fuentes&quot;&gt;Fuentes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/First-class_function&quot;&gt;en.wikipedia.org/wiki/First-class_function&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10141124/any-difference-between-first-class-function-and-high-order-function&quot;&gt;stackoverflow.com/questions/10141124/any-difference-between-first-class-function-and-high-order-function&lt;/a&gt;
*&lt;a href=&quot;http://www.i-programmer.info/programming/theory/5933-what-exactly-is-a-first-class-function-and-why-you-should-care.html&quot;&gt;i-programmer.info/programming/theory/5933-what-exactly-is-a-first-class-function-and-why-you-should-care.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://appendto.com/2016/10/javascript-functions-as-first-class-objects/&quot;&gt;appendto.com/2016/10/javascript-functions-as-first-class-objects/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch2.html&quot;&gt;drboolean.gitbooks.io/mostly-adequate-guide/content/ch2.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="programacion-funcional" /><category term="diseno" /><category term="patrones" /><category term="terminos-informaticos" /><summary type="html">En un lenguaje de programación, se dice que cumple con la condición First-class function, si permite tratar las funciones como cualquier otro tipo de objeto.</summary></entry><entry><title type="html">vim: ctags</title><link href="http://enrq.me/blog/vim-ctags" rel="alternate" type="text/html" title="vim: ctags" /><published>2018-01-26T11:50:00+01:00</published><updated>2018-01-26T11:50:00+01:00</updated><id>http://enrq.me/blog/vim-ctags</id><content type="html" xml:base="http://enrq.me/blog/vim-ctags">&lt;p&gt;La herramienta &lt;a href=&quot;http://ctags.sourceforge.net/&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;ctags&lt;/code&gt;&lt;/a&gt;, también llamado &lt;em&gt;exhuberant ctags&lt;/em&gt;, permite indexar los objetos —definiciones simbólicas— de un lenguaje de programación. Para tal fin genera una lista o tabla en un archivo nuevo generado automáticamente. Estos índices permiten localizar y acceder rápidamente a los archivos dónde fueron definidos los objetos indexados. Vamos, que si pulsas determinada combinación sobre uno de estos objetos, digamos un método de clase, se abrirá automáticamente el archivo que contiene el cuerpo de esa función, situando el cursor sobre la misma línea. Esta opción suele venir integrada en &lt;em&gt;IDEs&lt;/em&gt; muchos más completos como pueden ser &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt; o &lt;a href=&quot;https://www.eclipse.org/&quot;&gt;Eclipse&lt;/a&gt;. Por otro lado, los editores de texto están mucho menos «cargados» que los anteriores y carecen de esta característica. ctags vendría a rellenar ese vacío, sobre todo en nuestro caso particular: vim.&lt;/p&gt;

&lt;p&gt;Básicamente, &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;ctags&lt;/code&gt; escanea un archivo en busca de esos objetos simbólicos, indexando su origen en un archivo externo nombrado &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;tags&lt;/code&gt;. También cabe la posibilidad de hacer la exploración de manera recursiva desde el directorio raíz de cualquier proyecto. Debido a las particularidades sintácticas de cada lenguaje soportará una cantidad determinada de tipos de objetos. Entre los objetos más comunes se hallan clases, variables, funciones, constantes, nombres.&lt;/p&gt;

&lt;p&gt;Aunque principalmente se ideó para usar en combinación con vim lo cierto es que se puede integrar en cualquier editor, siempre que haya un plugin o addon que lo soporte. Entre los editores que soportan ctags están &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=jaydenlin.ctags-support&quot;&gt;Visual Studio Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/SublimeText/CTags&quot;&gt;Sublime&lt;/a&gt; o &lt;a href=&quot;https://atom.io/packages/atom-ctags&quot;&gt;Atom&lt;/a&gt;. También puedes consultar que editores y herramientas soportan ctags en esta &lt;a href=&quot;http://ctags.sourceforge.net/tools.html&quot;&gt;lista&lt;/a&gt;, aunque la página parece no haber sido actualizado en los últimos diez años o más.&lt;/p&gt;

&lt;p&gt;La página oficial también ofrece un &lt;a href=&quot;http://ctags.sourceforge.net/languages.html&quot;&gt;listado de lenguajes soportados&lt;/a&gt; pero observando la frecuencia de mantenimiento de la misma no es muy de fiar que digamos. Para asegurar un listado más actualizado se puede comprobar mediante la ejecución del siguiente comando.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;ctags --list-languages&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;La última versión estable de ctags salió el 9 de julio de 2009. Ha llovido desde entonces. Por lo tanto no sería casualidad que el lenguaje con el que estemos trabajando no esté soportado o simplemente no se haya actualizado. Para solventar este problema ctags ofrece la posibilidad de extender los patrones de reconocimiento. Esto implicaría crear todas la reglas manualmente a través de expresiones regulares ¡Buf que pereza! Recomiendo que antes de ponerte a hacer algo similar es mejor buscar en internet para ver si existe la definición deseada. Normalmente suele haber algún internaute de espíritu altruista que comparta este tipo de trabajos.&lt;/p&gt;

&lt;p&gt;Estas opciones, bien sea incluyendo un nuevo lenguaje o extendiendo uno ya existente hasta excluir archivos y directorios, deberán incluirse en un archivo llamado &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.ctags&lt;/code&gt; que se debe situar en la carpeta de usuario del sistema. ctags siempre leerá este archivo cada vez que se ejecute.&lt;/p&gt;

&lt;p&gt;Por supuesto, para poder ejecutar el comando antes se deberá instalar &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;ctags&lt;/code&gt;. Como he señalado en anteriores artículos, la mejor herramienta para instalar programas y paquetes para &lt;em&gt;mac&lt;/em&gt; es utlizando la herramienta &lt;a href=&quot;https://brew.sh/&quot;&gt;homebrew&lt;/a&gt;. En el caso de linux lo harás con el propio gestor de paquetes instalado por defecto. Y para Windows… la historia de siempre.&lt;/p&gt;

&lt;p&gt;Una vez lo tengas instalado, tan solo deberás navegar hasta la carpeta oportuna y ejecutar ctags de manera recursiva. Por supuesto, asegúrate que el proyecto —o una parte del mismo— esté escrito en uno de los lenguajes indicados.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;ctags -R .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si lo que pretendes es indexar una carpeta en concreto, entonces cambia el punto por el nombre de la misma. También puedes indexar solamente el tipo de archivo deseado indicando la extensión.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;ctags -R src/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.c&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;El resultado es un archivo en texto plano generado automáticamente —con el nombre de &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;tags&lt;/code&gt;— que utilizará el editor como referencia para poder navegar entre archivos. En el caso de vim, se debe ejecutar el programa en el mismo directorio donde esté situado el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;tags&lt;/code&gt;. Para ello es recomendable lanzar el comando &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;ctags&lt;/code&gt; sobre la carpeta raíz del proyecto.&lt;/p&gt;

&lt;h2 id=&quot;acciones&quot;&gt;Acciones&lt;/h2&gt;

&lt;p&gt;Supón que el proyecto está escrito en C. Una vez abierto vim, elige un archivo cualquiera y sitúa el cursor sobre una función cualquiera que haya sido importada. El archivo debe hallarse en la misma estructura de directorios del proyecto. Usando la combinación &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;]&lt;/kbd&gt; el programa navegará justo hasta la línea del archivo donde se definió la función. Para regresar teclea &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;t&lt;/kbd&gt;. Así de fácil.&lt;/p&gt;

&lt;p&gt;A continuación se muestra una lista de las acciones más comunes usadas en los tags.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recuerda que la condición indispensable para estas acciones es que el cursor se halle sobre término en cuestión.&lt;/strong&gt;&lt;/p&gt;

&lt;table class=&quot;commands-table solid-table table-full&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;b&gt;Acción&lt;/b&gt;&lt;/td&gt;
      &lt;td&gt;&lt;b&gt;Descripción&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;]&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;Salta hasta la línea del archivo donde se halla el cuerpo del objeto definido. Puedes utilizar un contador para navegar hacia avanzar más de una posición en la pila: &lt;kbd&gt;2&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;]&lt;/kbd&gt;. Una vez realizada esta acción la pila volverá a modificarse marcando como último lugar el actual, ningún salto más se podrá llevar a cabo. La condición primordial de esta característica es haber viajado hacia atrás en la pila actual.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;t&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;
      Regresa una posición atrás en la pila de saltos realizados por la acción anterior. Puede usarse un número que no exceda la pila de navegación para evitar un regreso secuencial: &lt;kbd&gt;3&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;t&lt;/kbd&gt;.
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;w&lt;/kbd&gt;&lt;kbd&gt;]&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;Al igual que &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;]&lt;/kbd&gt; pero abriendo una nueva ventana.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;w&lt;/kbd&gt;&lt;kbd&gt;}&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;Abre una ventana de previsualización (no editable) con el contenido del archivo donde apunta el &lt;i&gt;tag&lt;/i&gt;.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;comandos&quot;&gt;Comandos&lt;/h2&gt;

&lt;p&gt;Mucho más completa es la lista de comandos posibles. En la siguiente tabla se muestran una selección de estos relacionados con los tags que vim ofrece.&lt;/p&gt;

&lt;table class=&quot;commands-table solid-table table-full&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;b&gt;Comando&lt;/b&gt;&lt;/td&gt;
      &lt;td&gt;&lt;b&gt;Descripción&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:tag&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;
Al igual que se hace con &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;]&lt;/kbd&gt; pero escribiendo el nombre del &lt;i&gt;tag&lt;/i&gt; como argumento. También acepta expresiones regulares, en este caso abrirá en la ventana actual el primer resultado que coincida con el patrón de búsqueda. Más adelante se verá como navegar entre estos resultados.
&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:stag&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Tiene el mismo comportamiento que &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:tag&lt;/code&gt; pero abriendo el archivo en una nueva ventana.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:tags&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;
Muestra el contenido de la pila de &lt;i&gt;tags&lt;/i&gt;. La lista contiene el «histórico» de navegación desde que el primer salto en la misma secuencia. Parte de la misma información mostrada es la ruta y nombre de archivo junto con la línea donde se inicio el salto. El archivo actual se muestra con el símbolo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&amp;gt;&lt;/code&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:ptag&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Se comporta igual que &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;w&lt;/kbd&gt;&lt;kbd&gt;}&lt;/kbd&gt;. También acepta expresiones regulares. Como curiosidad hay un [script][script-cursor-hold] que tras mantener unos segundos el cursor sobre una palabra enlazada a un archivo, muestra el contenido automáticamente en la ventana de previsualización.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:pclose&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Cierra la ventana de previsualización.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:pedit&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Permite abrir un archivo para editar en una ventana de previsualización. Útil para editar archivos de cabecera como en C.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:psearch&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Busca la cadena de texto y si la encuentra lo muestra en la ventana de previsualización.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Otro aspecto interesante de los &lt;em&gt;tags&lt;/em&gt; es que permite el autocompletado pulsando el tabulador. Si por ejemplo tenemos la siguiente palabra escritar.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;:tag get&amp;lt;tab&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Según como haya sido definido el menú de completado (&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'wildmenu'&quot;&gt;wildmenu&lt;/a&gt;) se mostrarán los resultados de una u otra forma.&lt;/p&gt;

&lt;p&gt;También pueden usarse expresiones regulares como patrón de búsqueda. Imagina que pretendes buscar un &lt;em&gt;tag&lt;/em&gt; que solo empiece con la palabra &lt;em&gt;Deploy&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;:tag /^Deploy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En este momento hay dos posibilidades, seguir con el tabulador navegado por las opciones el menú de autocompletado o pulsar Intro y a continuación y que muestre el primera resultado que halle en la ventana.&lt;/p&gt;

&lt;p&gt;Puede pasar que en ocasiones el patrón de búsqueda devuelva múltiples resultados. Esto se debe a que un nombre de función (o método) haya podido ser definida más de una vez. Para poder ver la lista completa o navegar entre los resultados vim ofrece una serie de comandos para tal caso.&lt;/p&gt;

&lt;table class=&quot;commands-table solid-table table-full&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;b&gt;Comandos&lt;/b&gt;&lt;/td&gt;
      &lt;td&gt;&lt;b&gt;Descripción&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:[cuenta]tnext&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Salta a la siguiente coincidencia. Se puede introducir también un número para indicar cuantas posiciones se pretende avanzar.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:[cuenta]tprevious&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Retrocede a la coincidencia anterior.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:tselect&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Muestra una lista con todos los resultados. Cada resultado obtiene un número identificador que permite seleccionar el archivo rápidamente.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:tfirst&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Salta hasta la primera posición de la lista&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:tlast&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Al igual que el anterior pero hasta la posición final.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;javascript&quot;&gt;Javascript&lt;/h2&gt;

&lt;p&gt;En caso de trabajar en proyectos Javascript como yo, comprobarás una carencia importante en la interpretación de objetos de lenguaje. Y más aun tratándose de la nuevas versiones de ECMAScript por no decir React. Para solventar esta insuficiencia podemos crear nuevas definiciones mediante expresiones regulares. Esta tarea suele ser un coñazo. Así que hice una pequeña búsqueda en google y hallé un &lt;a href=&quot;https://github.com/romainl/ctags-patterns-for-javascript&quot;&gt;proyecto&lt;/a&gt; en github que incluye las expresiones regulares necesarias para la nueva sintaxis de Javascript. Así que ni corto ni perezoso la descargué. Mil gracias a &lt;a href=&quot;https://github.com/romainl&quot;&gt;Romain Lafourcade&lt;/a&gt; por compartirlo desinteresadamente.&lt;/p&gt;

&lt;p&gt;Pero todavía no funciona bien con React. Así que en otra búsqueda di con otros dos artículos (&lt;a href=&quot;https://medium.com/adorableio/modern-javascript-ctags-configuration-199884dbcc1&quot;&gt;este&lt;/a&gt; y &lt;a href=&quot;https://medium.freecodecamp.org/make-your-vim-smarter-using-ctrlp-and-ctags-846fc12178a4&quot;&gt;este&lt;/a&gt;) que ampliaban los patrones de ctags. El resultado final de mi archivo de configuración es el siguiente.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/7aec99ee11c7f1951e43918c0a94e20b.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;De todas formas no se descartan cambios en el futuro.&lt;/p&gt;

&lt;p&gt;A parte de estos consejos también recomiendo la lectura del &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/usr_29.html&quot;&gt;capítulo 29&lt;/a&gt; y &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/tagsrch.html&quot;&gt;Tags and special searches&lt;/a&gt; del manual de vim para ampliar información al respecto.&lt;/p&gt;

&lt;h2 id=&quot;fuentes&quot;&gt;Fuentes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/usr_29.html&quot;&gt;vimdoc.sourceforge.net/htmldoc/usr_29.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/tagsrch.html&quot;&gt;vimdoc.sourceforge.net/htmldoc/tagsrch.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dance.computer.dance/posts/2015/04/using-ctags-on-modern-javascript.html&quot;&gt;dance.computer.dance/posts/2015/04/using-ctags-on-modern-javascript.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/adorableio/modern-javascript-ctags-configuration-199884dbcc1&quot;&gt;medium.com/adorableio/modern-javascript-ctags-configuration-199884dbcc1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://davidosomething.com/blog/vim-for-javascript/&quot;&gt;davidosomething.com/blog/vim-for-javascript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/make-your-vim-smarter-using-ctrlp-and-ctags-846fc12178a4&quot;&gt;medium.freecodecamp.org/make-your-vim-smarter-using-ctrlp-and-ctags-846fc12178a4&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://andrew.stwrt.ca/posts/vim-ctags/&quot;&gt;andrew.stwrt.ca/posts/vim-ctags&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/romainl/ctags-patterns-for-javascript&quot;&gt;github.com/romainl/ctags-patterns-for-javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="vim" /><category term="ctags" /><category term="tutorial" /><summary type="html">Guía prática para configurar ctags. Este programa permite para enlazar referencias entre objetos del lenguaje entre diferentes archivos en vim.</summary></entry><entry><title type="html">vim: configuración básica</title><link href="http://enrq.me/blog/vim-configuracion-inicial" rel="alternate" type="text/html" title="vim: configuración básica" /><published>2017-12-19T18:30:00+01:00</published><updated>2017-12-19T18:30:00+01:00</updated><id>http://enrq.me/blog/vim-configuracion-inicial</id><content type="html" xml:base="http://enrq.me/blog/vim-configuracion-inicial">&lt;p&gt;En un &lt;a href=&quot;/articulos/vim-intro&quot;&gt;artículo anterior&lt;/a&gt;, donde se introducía &lt;em&gt;vim&lt;/em&gt;, se creó un archivo llamado &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.vimrc&lt;/code&gt;. En él se incluía la opción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;mouse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;a&lt;/code&gt; para habilitar el ratón. Si no se hubiera insertado esta línea, te verías obligado a introducirla cada vez que arrancaras el programa.&lt;/p&gt;

&lt;p&gt;Esto no sería muy engorroso de tratarse de una única opción, pero ¿qué pasaría si introdujeras más ajustes? ¿querrías escribirlos en cada nueva sesión? ¿te acordarías de todos? Obviamente no.&lt;/p&gt;

&lt;p&gt;Mediante el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.vimrc&lt;/code&gt; en cada nueva instancia &lt;em&gt;vim&lt;/em&gt; lee y ejecuta los comandos incluidos en el mismo secuencialmente, asegurando la persistencia de los ajustes entre sesiones. Además también facilita su legilibilidad al mantener cada opción por línea de texto.&lt;/p&gt;

&lt;p&gt;Para poder poblar el archivo de configuración es necesario saber que opciones ofrece &lt;em&gt;vim&lt;/em&gt;. Así que en el presente artículo se exponen una serie de ajustes para tunearlo. No va a ser una guía exhaustiva con todas las posibilidades de configuración pero si aquellas que he considerado que facilitan el aterrizaje a vim. Por cada una de las opciones se incluye una descripción de su cometido. Algunas explicaciones son más extensas que otras puesto que su dificultad entraña una mayor explicación.&lt;/p&gt;

&lt;p&gt;Si quieres hacerte una idea de cuántas opciones presenta (y no estarían todas) puedes ejecutar el comando &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/quickref.html#option-list&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:help option-list&lt;/code&gt;&lt;/a&gt;. Esto abrirá una ventana con un lista de instrucciones junto a una escueta descripción.&lt;/p&gt;

&lt;p&gt;Por último, se incluye el archivo de configuración completo para que puedas ver como queda en conjunto. También lo puedes descargar pero &lt;strong&gt;no recomiendo que lo hagas&lt;/strong&gt;. Es mejor que vayas incluyendo uno a uno cada ajuste y compruebes por ti mismo que ha cambiado en &lt;em&gt;vim&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Ahora sí, sin más dilación procedamos a estudiar las diferentes opciones.&lt;/p&gt;

&lt;h2 id=&quot;antes-de-empezar&quot;&gt;Antes de empezar&lt;/h2&gt;

&lt;p&gt;Tras todo este tiempo usando vim he descubierto que la mejor forma para configurarlo es haciéndolo uno mismo. Hay muchos usuarios que comparten su &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.vimrc&lt;/code&gt; por internet y aunque es muy tentador usarlo es recomendable no hacerlo. Al final te encontrarás con una maraña de líneas de comandos que no entenderás porque están ahí. También ocurre lo mismo con los &lt;em&gt;plugins&lt;/em&gt;, por no haber leído un poco sobre las características de &lt;em&gt;vim&lt;/em&gt; al final se acaban instalando &lt;em&gt;plugins&lt;/em&gt; que ya existen como funcionalidades integradas, pero este es otro tema. En definitiva, quédate con que las configuraciones de otros usuarios debes usarlas como referencia para crear el tuyo propio.&lt;/p&gt;

&lt;p&gt;Aparte de leer que hace cada comando en la documentación, la mejor manera para probarlo es incluir una a una cada opción y ver el resultado. Para ello lo primero es localizar el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.vimrc&lt;/code&gt;. Dependiendo del sistemo operativo el archivo se puede encontrar en diferentes ubicaciones o con diferente nombre. En la siguiente tabla puede verse las diferentes rutas y nombres.&lt;/p&gt;

&lt;table class=&quot;solid-table table-full&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;b&gt;Sistema operativo&lt;/b&gt;&lt;/td&gt;
      &lt;td&gt;&lt;b&gt;Ruta&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Unix / Linux&lt;br /&gt;Mac OS X&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.vimrc&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows&lt;/td&gt;
      &lt;td&gt;
        &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/_vimrc&lt;/code&gt;
        &lt;br /&gt;
        &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$VIM&lt;/span&gt;/_vimrc&lt;/code&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;En ocasiones puedes encontrar que también nombran el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;exrc&lt;/code&gt;. Este archivo pertenece al antiguo &lt;em&gt;vi&lt;/em&gt; así que no le prestes mucha atención. Puedes saber más sobre esto pinchando &lt;a href=&quot;https://unix.stackexchange.com/questions/198898/what-is-the-difference-between-exrc-and-vimrc&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Si nunca has usado &lt;em&gt;vim&lt;/em&gt;, lo normal es que no exista &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;vimrc&lt;/code&gt; por lo tanto se debe crear. El mejor método para editar este archivo es accediendo a &lt;em&gt;vim&lt;/em&gt; y desde allí ejecutar el siguiente comando.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;:e &lt;span class=&quot;nv&quot;&gt;$MYVIMRC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tras ejecutar este comando se abrirá el archivo que se encuentre en la ruta indicada por &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$MYVIMRC&lt;/span&gt;&lt;/code&gt; (la puedes visualizar ejecutando &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:echo &lt;span class=&quot;nv&quot;&gt;$MYVIMRC&lt;/span&gt;&lt;/code&gt;). Si este no existe será almacenado en la misma ruta cuando sea guardado.&lt;/p&gt;

&lt;p&gt;Antes de empezar a editar el archivo de configuración, sería bueno recordar unos cuantos comandos básicos para poder moverse en el modo normal de &lt;em&gt;vim&lt;/em&gt;.&lt;/p&gt;

&lt;table class=&quot;commands-table solid-table table-full&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;b&gt;Acciones&lt;/b&gt;&lt;/td&gt;
      &lt;td&gt;&lt;b&gt;Descripción&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;i&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Entrar en el modo insert.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;ESC&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Volver al modo normal.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;x&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Borrar el carácter justo debajo del cursor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;:wq&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Guardar (x) y salir de vim (q).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;dd&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Borrar la línea actual donde se halla el cursor. También almacena la linea borrada en el portapapeles.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;yy&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Copia la línea actual en el portapapeles.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Pegar el contenido del portapapeles.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;u&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Deshacer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;R&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Rehacer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;h&lt;/kbd&gt;&lt;kbd&gt;j&lt;/kbd&gt;&lt;kbd&gt;k&lt;/kbd&gt;&lt;kbd&gt;l&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Comandos de movimiento. En el mismo orden son ←↓↑→.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Para poder saber más sobre cada comando siempre puedes teclear &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:help &amp;lt;comando&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A continuación puedes ver las opciones con la cuáles completar un &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;vimrc&lt;/code&gt; inicial junto a una explicación para cada una.&lt;/p&gt;

&lt;h2 id=&quot;general&quot;&gt;General&lt;/h2&gt;

&lt;h3 id=&quot;set-nocompatible&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'nocompatible'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;nocompatible&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Compatibilidad con &lt;em&gt;vi&lt;/em&gt; desactivada. Al incluir esta opción evita efectos inesperados debido a diferentes comportamientos entre &lt;em&gt;vi&lt;/em&gt; y &lt;em&gt;vim&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Esta opción se desactiva por defecto cuando &lt;em&gt;vim&lt;/em&gt; se topa con un archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.vimrc&lt;/code&gt; al inicio. El hecho de forzar su uso es para evitar la sobrescritura de las opciones por defecto como en el caso de usar el argumento &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;-C&lt;/code&gt; al arrancar &lt;em&gt;vim&lt;/em&gt;. Este forzaría el modo compatible aunque encuentre un &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.vimrc&lt;/code&gt;. Para evitar esta situación solo basta con incluir la opción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;nocompatible&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Piensa en esta opción como una salvaguarda para evitar posibles conflictos.&lt;/p&gt;

&lt;h3 id=&quot;set-encodingutf-8&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'encoding'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf-8&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Establece la codificación de caracteres a &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;UTF-8&lt;/code&gt;.  Básicamente es la codificación de salida que veremos en el terminal. También lo utiliza internamente para escribir en archivos como &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/usr_21.html#21.3&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;viminfo&lt;/code&gt;&lt;/a&gt;, donde se almacena información que de otra manera se perdería tales como marcas, patrones de búsqueda, historial de comandos, etc.&lt;/p&gt;

&lt;p&gt;Los archivos editados no sufrirán ningún cambio en su codificación al ser guardados. Si por el contrario deseas cambiar este comportamiento deberías usar la opción &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'fileencoding'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;fileencoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf-8&lt;/code&gt;&lt;/a&gt;. Esta instrucción indica a vim modificar la codificación del archivo cuando se guarda.&lt;/p&gt;

&lt;p&gt;La elección del formato &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;UTF-8&lt;/code&gt; es debido a que es el más común entre sistemas, así que para qué cambiarlo.&lt;/p&gt;

&lt;h3 id=&quot;set-showcmd&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'showcmd'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;showcmd&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Muestra parcialmente el comando que se está usando actualmente. Aparece en la esquina inferior derecha como se muestra en la siguiente imagen.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/vim-config-1.jpg&quot;&gt;
    &lt;img src=&quot;/assets/vim-config-1.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;showcmd en acción.&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 57.478005865102645%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;En este caso se ha introducido el verbo —&lt;em&gt;&lt;strong&gt;d&lt;/strong&gt;elete&lt;/em&gt;—, el modificador —&lt;em&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/em&gt;— y queda en espera del sustantivo (objeto) que podría ser una palabra —&lt;em&gt;&lt;strong&gt;w&lt;/strong&gt;ord&lt;/em&gt;—. Tras introducir este último desaparece la ayuda visual.&lt;/p&gt;

&lt;h3 id=&quot;set-showmode&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'showmode'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;showmode&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Indica en el modo actual en la línea de comando excepto en modo &lt;em&gt;normal&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;set-visualbell&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'visualbell'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;visualbell&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cambia la alerta sonora por una visual. En algunas ocasiones esta alerta puede estar sujeta a la configuración del terminal donde se ejecute por lo tanto deberías modificar los ajustes del terminal.&lt;/p&gt;

&lt;h3 id=&quot;set-history50&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'history'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;50&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Número de comandos que &lt;em&gt;vim&lt;/em&gt; almacena. Por defecto es 20. He preferido dejarlo en 50 aunque puedes poner el que quieras.&lt;/p&gt;

&lt;h3 id=&quot;set-autoread&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'autoread'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;autoread&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Actualiza automáticamente los archivos que estén abiertos y hayan sido modificados fuera de &lt;em&gt;vim&lt;/em&gt;. Aunque esta solución no funciona a no ser que un comando externo se ejecute como &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:ls!&lt;/code&gt; o cualquier otro.&lt;/p&gt;

&lt;h3 id=&quot;set-backspaceeolstartindent&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'backspace'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;backspace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eol,start,indent&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;El botón de retroceso (backspace) se comporta como en cualquier editor&lt;/p&gt;

&lt;h3 id=&quot;set-hidden&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'hidden'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;hidden&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Oculta los &lt;em&gt;buffers&lt;/em&gt; (un &lt;em&gt;buffer&lt;/em&gt; no es más que una copia del archivo en memoria) automáticamente al abandonarlos. También permite ocultar un &lt;em&gt;buffer&lt;/em&gt; incluso habiendo sido modificado sin guardar los cambios en disco.&lt;/p&gt;

&lt;h3 id=&quot;let-mapleader-&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/map.html#mapleader&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;mapleader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Permite definir una cadena de texto para poder ejecutar comandos sin pasar por la consola de &lt;em&gt;vim&lt;/em&gt;. Un ejemplo podría ser usando el carácter espacio (&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;“ ”&lt;/code&gt;) que en combinación con &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;w&lt;/code&gt; (&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&amp;lt;leader&amp;gt;w&lt;/code&gt;) sería el equivalente a escribir &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:w&lt;/code&gt; en la consola.&lt;/p&gt;

&lt;p&gt;Por convención se suele establecer la coma (&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;,&lt;/code&gt;) como carácter &lt;em&gt;leading&lt;/em&gt; pero yo me siento más cómodo con el espacio. Tú puedes elegir uno de los dos o el que prefieras, no en vano la característica más importante de vim es que su alta personalización.&lt;/p&gt;

&lt;p&gt;Estas combinaciones se consiguen mediante el &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/map.html#mapping&quot;&gt;mapeo de claves&lt;/a&gt; (key mapping) para crear nuevos comandos pero eso lo veremos más adelante. De momento recuerda que que hemos definido el &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;mapleader&lt;/code&gt; como un espacio.&lt;/p&gt;

&lt;h2 id=&quot;interfaz&quot;&gt;Interfaz&lt;/h2&gt;

&lt;h3 id=&quot;set-ruler&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'ruler'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;ruler&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Muestra la posición del cursor y si hay espacio también la posición relativa de la página expresada en porcentaje. Puedes configurar cómo el formato mediante la opción &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'rulerformat'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;rulerformat&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;set-relativenumber&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'relativenumber'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;relativenumber&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Activa los números de línea relativos a la posición actual del cursor. Esto es de gran utilidad cuando se utilizan comandos de movimiento verticales.&lt;/p&gt;

&lt;p&gt;Imagina que quieres seleccionar hasta una línea de texto superior. En vez de tener que contarlas tan sólo mirando el número indicado a la izquierda de la línea en cuestión ya sabrás que distancia se encuentra. Por ejemplo, si fuesen doce líneas introducirías lo siguiente: &lt;kbd&gt;V&lt;/kbd&gt;&lt;kbd&gt;1&lt;/kbd&gt;&lt;kbd&gt;2&lt;/kbd&gt;&lt;kbd&gt;k&lt;/kbd&gt;.&lt;/p&gt;

&lt;p&gt;Pero si por el contrario solamente quieres ver la posición absoluta debes utilizar la opción &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'number'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;number&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;set-numberwidth2&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'numberwidth'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;numberwidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Establece el número de columnas destinado para mostrar los números de líneas de texto. Normalmente no es necesario más de dos si se ha usado la opción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;relativenumber&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;set-cursorline&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'cursorline'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;cursorline&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Resalta la línea donde se halla actualmente el cursor. Dependiendo del tema usado puede resaltar la misma cambiando el color de fondo o subrayándola.&lt;/p&gt;

&lt;h3 id=&quot;set-nowrap&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'nowrap'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;nowrap&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Permite que las líneas de texto sobresalgan más allá del ancho de la ventana. En su versión por defecto —&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;wrap&lt;/code&gt;— la parte que estuviera oculta de la línea saltaría un posición.&lt;/p&gt;

&lt;h3 id=&quot;set-lazyredraw&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'lazyredraw'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;lazyredraw&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Mejora el rendimiento del programa al evitar redibujar la pantalla durante la ejecución de macros, registros u cualquier otro comando que no tenga efecto sobre el texto. Se puede forzar el refresco usando la instrucción &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/various.html#:redraw&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:redraw&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;scrolling&quot;&gt;&lt;em&gt;Scrolling&lt;/em&gt;&lt;/h2&gt;

&lt;h3 id=&quot;set-scrolloff8&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'scrolloff'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;scrolloff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;El desplazamiento (&lt;em&gt;scrolling&lt;/em&gt;) comienza ocho líneas antes que el cursor alcance el borde superior o inferior de la ventana. Permite revelar el contenido que rodea la posición actual, que de otra manera quedaría oculto por los límites de la ventana.&lt;/p&gt;

&lt;h3 id=&quot;set-sidescrolloff16&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'sidescrolloff'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sidescrolloff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;16&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Al igual que &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;scrolloff&lt;/code&gt; pero en el plano horizontal. En este caso lo he ajustado al doble que el desplazamiento vertical.&lt;/p&gt;

&lt;h3 id=&quot;set-sidescroll1&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'sidescroll'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sidescroll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Ajusta el desplazamiento horizontal a una columna. Esto tiene un impacto directo en el rendimiento por lo tanto si trabajas en un entorno limitado se puede ajustar a &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;0&lt;/code&gt; (o no ajustar puesto que su valor por defecto es &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;0&lt;/code&gt;), desplazando la mitad de la ventana para mantener el cursor en el centro.&lt;/p&gt;

&lt;p&gt;Si quieres saber más sobre scrolling puedes leer en el manual de usuario los siguientes artículos, &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/scroll.html#scrolling&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:help scrolling&lt;/code&gt;&lt;/a&gt; y &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/term.html#slow-terminal&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:help slow-terminal&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;sangría-indetación&quot;&gt;Sangría (&lt;em&gt;Indetación&lt;/em&gt;)&lt;/h2&gt;

&lt;h3 id=&quot;set-tabstop2&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'tabstop'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tabstop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Número de espacios que se insertan al tabular, en este caso 2. Otra opción es mantener la configuración inicial de &lt;em&gt;vim&lt;/em&gt; (por defecto son 8) y usar la propiedad&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'softtabstop'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;softtabstop&lt;/code&gt;&lt;/a&gt; a 2, lo que mostraría cualquier tabulación a 2 pero internamente seguiría siendo 8.&lt;/p&gt;

&lt;h3 id=&quot;set-shiftwidth2&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'shiftwidth'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;shiftwidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Número de espacios usados en la sangría (y no, no tiene nada que ver con la bebida). Al igual que tabstop, por defecto su valor es 8.&lt;/p&gt;

&lt;h3 id=&quot;set-expandtab&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'expandtab'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;expandtab&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Fuerza el uso de espacios en el carácter para tabular. Se puede forzar la tabulación usando &lt;kbd&gt;CTRL&lt;/kbd&gt;&lt;kbd&gt;V&lt;/kbd&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;.&lt;/p&gt;

&lt;h3 id=&quot;set-smarttab&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'smarttab'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;smarttab&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Utiliza el valor especificado en la opción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;shiftwidth&lt;/code&gt; para tabular el inicio de una línea de texto, para el resto se usa la propiedad &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;tabstop&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;set-autoindent&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'autoindent'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;autoindent&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Aplica la sangría automáticamente cuando al inicio de una nueva línea, copiando la sangría de la línea anterior.&lt;/p&gt;

&lt;h3 id=&quot;set-smartindent&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'smartindent'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;smartindent&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;La sangría automática se hace en función al estilo/sintaxis del tipo de archivo que se edita(especialmente para C). Se usa en combinación con autoindent.&lt;/p&gt;

&lt;p&gt;Puedes encontrar información más detallada leyendo la sección &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/insert.html#ins-expandtab&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:help ins-expandtab&lt;/code&gt;&lt;/a&gt; en el manual de usuario.&lt;/p&gt;

&lt;h2 id=&quot;completado&quot;&gt;Completado&lt;/h2&gt;

&lt;h3 id=&quot;set-wildmenu&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'wildmenu'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;wildmenu&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Mejora el completado de la línea de comandos, mostrando un menú con las opciones disponibles justo encima. El comando para mostrar las posibles opciones se ajusta mediante la propiedad &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'wildchar'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;wildchar&lt;/code&gt;&lt;/a&gt;, por defecto es &lt;kbd&gt;tab&lt;/kbd&gt;. Se puede navegar entre los resultados bien usando &lt;kbd&gt;tab&lt;/kbd&gt;, las flechas o &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;P&lt;/kbd&gt; &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;N&lt;/kbd&gt;.&lt;/p&gt;

&lt;p&gt;Si la propiedad &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'wildmode'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;wildmode&lt;/code&gt;&lt;/a&gt; se modifica y no contiene la opción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;full&lt;/code&gt;, &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;wildmenu&lt;/code&gt; no se mostrará. Por defecto su valor es &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;full&lt;/code&gt;, lo que permite navegar por los resultados secuencialmente.&lt;/p&gt;

&lt;h2 id=&quot;búsqueda&quot;&gt;Búsqueda&lt;/h2&gt;

&lt;h3 id=&quot;set-ignorecase&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'ignorecase'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;ignorecase&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Permite realizar búsquedas de palabras sin tener en cuenta mayúsculas y minúsculas (&lt;em&gt;case-sensitive&lt;/em&gt;).&lt;/p&gt;

&lt;h3 id=&quot;set-smartcase&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'smartcase'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;smartcase&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Cuando el patrón de búsqueda contiene alguna mayúscula su comportamiento es estricto, distinguiendo entre mayúsculas de minúsculas.&lt;/p&gt;

&lt;h3 id=&quot;set-hlsearch&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'hlsearch'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;hlsearch&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Destaca todas las coincidencias del patrón de búsqueda en cuestión.&lt;/p&gt;

&lt;h3 id=&quot;set-incsearch&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'incsearch'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;incsearch&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;La búsqueda se realiza incrementalmente a medida que se define el patrón, destacando la primera coincidencia desde donde se halle el cursor.&lt;/p&gt;

&lt;h2 id=&quot;colores&quot;&gt;Colores&lt;/h2&gt;

&lt;h3 id=&quot;syntax-enable&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'syntax'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;syntax &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Activa el &lt;a href=&quot;https://www.wikiwand.com/es/Coloreado_de_sintaxis&quot;&gt;resaltado (o colerado) de sintaxis&lt;/a&gt;. Puedes hacerte una idea de los lenguajes que soporta vim mirando el contenido de la carpeta &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$VIMRUNTIME&lt;/span&gt;/syntax&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;También se puede usar el valor on pero esto anularía configuraciones personalizadas mientras que enable las mantendría.&lt;/p&gt;

&lt;p&gt;Las combinaciones de colores se pueden cambiar usando la propiedad &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/syntax.html#:colorscheme&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;colorscheme&lt;/code&gt;&lt;/a&gt;. Para ver los esquemas que &lt;em&gt;vim&lt;/em&gt; ofrece por defecto visita la ruta &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$VIMRUNTIME&lt;/span&gt;/colors&lt;/code&gt;. También puedes descargarlos o crear los tuyos propios, ajustando el valor de la propiedad al nombre del archivo en cuestión.&lt;/p&gt;

&lt;h2 id=&quot;tipos-de-archivo&quot;&gt;Tipos de archivo&lt;/h2&gt;

&lt;h3 id=&quot;filetype-on&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/filetype.html&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;filetype on&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;En esta propiedad incluye ajustes específicos basados en el tipo de archivo. Es decir, si estás editando un archivo en C, &lt;em&gt;vim&lt;/em&gt; cargará automáticamente propiedades exclusivas como comportamiento, resaltado de sintaxis, sangrías y tabulaciones, etc… También sobrescribirá cualquier ajuste definido de manera global, puesto que los ajustes locales tienen preferencia sobre los globales.&lt;/p&gt;

&lt;p&gt;Si solo pretendes activar la opción de sangría y tabulación, ignorando el resto de ajustes particulares, deberás usar el siguiente comando: &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/filetype.html#:filetype-indent-on&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;filetype indent on&lt;/code&gt;&lt;/a&gt;. También puedes ajustarlo al contrario: &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/filetype.html#:filetype-plugin-on&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;filetype plugin on&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;backups&quot;&gt;Backups&lt;/h2&gt;

&lt;h3 id=&quot;set-directoryvimswp&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'directory'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;directory^&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/.vim/swp//&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Cada vez que se abre un archivo en &lt;em&gt;vim&lt;/em&gt;, automáticamente se crea un archivo de intercambio. Este archivo se almacena en el mismo lugar donde se halla el archivo en cuestión con la extensión &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.swp&lt;/code&gt;. Fundamentalmente, este archivo se utiliza para restringir el acceso al archivo editado, mientras esté abierto, por otros usuarios o procesos.&lt;/p&gt;

&lt;p&gt;Para evitar «contaminar» el directorio actual con estos archivos extra, podemos especificar una ruta donde queramos que se almacenen. Asegúrate que exista el directorio elegido, en caso contrario fallará.&lt;/p&gt;

&lt;p&gt;Dos características no vista hasta ahora son la dos barras (&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;//&lt;/code&gt;) que nombran el archivo de intercambio con la ruta absoluta, evitando así posibles conflictos. La otra, el acento circunflejo junto al igual (&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#:set^=&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;^&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;), permite que en una propiedad que acepta una lista de valores, como &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;directory&lt;/code&gt;, pueda establecer el valor indicado de manera precedente al resto de opciones previas.&lt;/p&gt;

&lt;p&gt;Para evitar que &lt;em&gt;vim&lt;/em&gt; genere estos archivos tan solo debes incluir la opción &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'noswapfile'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;noswapfile&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;set-backup&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'backup'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;backup&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;A diferencia de los archivos &lt;em&gt;swap&lt;/em&gt; están las copias de seguridad &lt;em&gt;per se&lt;/em&gt;. Su extensión es una tilde (&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;~&lt;/code&gt;). Los primeros almacenan exáctamente el contenido del &lt;em&gt;buffer&lt;/em&gt;, por tanto todo lo relativo al propio programa como marcas, variables locales, históricos, etc. Los segundos solamente crean una copia exacta del mismo archivo editado.&lt;/p&gt;

&lt;p&gt;Como ya vimos en la propiedad anterior, por defecto &lt;em&gt;vim&lt;/em&gt; guarda cualquier fichero extra en el mismo directorio donde se halla el archivo que está siendo editado. Con la propiedad &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'backupdir'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;backupdir^&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.vim/cache/backup//&lt;/code&gt;&lt;/a&gt; indicamos dónde queremos que se guarden estas copias de seguridad.&lt;/p&gt;

&lt;p&gt;En la siguiente tabla puedes ver que opciones de respaldo ofrece &lt;em&gt;vim&lt;/em&gt;.&lt;/p&gt;

&lt;table class=&quot;solid-table table-full&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;b&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;backup&lt;/code&gt;&lt;/b&gt;&lt;/td&gt;
      &lt;td&gt;&lt;b&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;writebackup&lt;/code&gt;&lt;/b&gt;&lt;/td&gt;
      &lt;td&gt;&lt;b&gt;Resultado&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;off&lt;/td&gt;
      &lt;td&gt;off&lt;/td&gt;
      &lt;td&gt;Sin copia de seguridad&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;off&lt;/td&gt;
      &lt;td&gt;on&lt;/td&gt;
      &lt;td&gt;Copia de seguridad antes de abrir el archivo. Cuando se cierra la copia es borrada (&lt;b&gt;por defecto&lt;/b&gt;).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;on&lt;/td&gt;
      &lt;td&gt;off&lt;/td&gt;
      &lt;td&gt;Crea una copia nueva al abrir el archivo, borrando la anterior. La copia se mantiene tras cerrar el programa.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;on&lt;/td&gt;
      &lt;td&gt;on&lt;/td&gt;
      &lt;td&gt;Igual que la anterior.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Ahora ya sabes que para que las copias persistan tan sólo debes añadir la opción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;backup&lt;/code&gt; en el &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;vimrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Por último, si eres de los que no quieren hacer copias de seguridad porque al fin y al cabo no hay proyecto que no esté respaldado por un &lt;a href=&quot;https://www.wikiwand.com/es/Control_de_versiones&quot;&gt;SCM&lt;/a&gt;, entonces puedes desactivar esta opción con &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'writebackup'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;nowritebackup&lt;/code&gt;&lt;/a&gt;. Si incluiste la propiedad &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;backup&lt;/code&gt;, bórrala o cámbiala por &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;nobackup&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;set-undofile&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'undofile'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;undofile&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;vim&lt;/em&gt; elimina el histórico de cambios cuando se cierra y con cada nueva sesión se genera de nuevo. &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;undofile&lt;/code&gt; evita este comportamiento guardando una copia del arbol de cambios en un archivo con la extensión &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.un~&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como bien te habrás imaginado, también almacena este archivo en el mismo directorio que el archivo editado. Para cambiar esta propiedad usaremos &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'undodir'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;undodir^&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.vim/cache/undo//&lt;/code&gt;&lt;/a&gt;. Las opciones de la ruta son las mismas que para &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;directory&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;El hecho de almacenar todos estos archivos bajo la carpeta &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;cache&lt;/code&gt; es para poder localizarlos fácilmente. También es muy práctico el poder borrarlos, tan solo borras el contenido de la carpeta &lt;em&gt;et voilà&lt;/em&gt;. Recuerda volver a crear las carpetas sino &lt;em&gt;vim&lt;/em&gt; se quejará cada vez que lo abras y fallará al guardar o cerrar el archivo con un mensaje parecido a este.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;~/.vim/cache/backup/any-file~&quot;&lt;/span&gt; E510: Can&lt;span class=&quot;s1&quot;&gt;'t make backup file (add ! to override)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Para terminar con esta sección, también cabe mencionar que la opción de añadir dos barras al final de la ruta suministrada a &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;backupdir&lt;/code&gt; &lt;a href=&quot;https://stackoverflow.com/a/26779916/455237&quot;&gt;no funciona como se espera&lt;/a&gt;. De todas formas no está de más dejarlo como tal por si un día lo arreglan.&lt;/p&gt;

&lt;h2 id=&quot;bola-extra&quot;&gt;Bola extra&lt;/h2&gt;

&lt;h3 id=&quot;set-modeline&quot;&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#modeline&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;modeline&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Esta opción permite a &lt;em&gt;vim&lt;/em&gt; ejecutar comandos relativos al mismo documento mediante una línea de comentario. Por defecto suele estar activado aunque puede que en algunas versiones de esté desactivado por razones de seguridad. De hecho si el usuario es &lt;em&gt;root&lt;/em&gt; también está desactivado. Entre estas vulnerabilidades pueden estar el ejecutar ficheros maliciosos al abrir un archivo. Para saber más puedes buscar en google las siguiente palabras: &lt;a href=&quot;https://www.google.com/search?q=vim+modeline+vulnerability&quot;&gt;vim modeline vulnerability&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Consideraciones de seguridad aparte, la verdad es que la opción de ejecutar comandos al abrir un archivo abre una abanico de posibilidades muy interesantes. Como por ejemplo la que se presenta debajo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot; vim:foldmethod=marker:foldlevel=0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este comentario se puede incluir al inicio o al final del archivo. Por defecto deberá ser dentro de las primeras o últimas 5 líneas. Esto viene establecido por la propiedad &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'modelines'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;modelines&lt;/code&gt;&lt;/a&gt;. En concreto esta instrucción «pliega» (&lt;em&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/fold.html#folding&quot;&gt;folding&lt;/a&gt;&lt;/em&gt;) el contenido del archivo que se halle entre las siguientes marcas de comentario.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot; {{{ 
&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Podemos usar esta propiedad para dividir por secciones nuestro &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;vimrc&lt;/code&gt;, lo que facilitaría su lectura. Puedes ver cómo queda en la imagen inferior.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/vim-config-2.jpg&quot;&gt;
    &lt;img src=&quot;/assets/vim-config-2.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Plegado por secciones.&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 67.44868035190615%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Ahora el archivo no ocupa más de 9 líneas por las que puedes navegar sin tener que paginar. Para poder abrir cada sección plegada, tan sólo debes situar el cursor sobre la línea deseada y pulsar &lt;kbd&gt;z&lt;/kbd&gt;&lt;kbd&gt;o&lt;/kbd&gt;. Se cierra con el comando &lt;kbd&gt;z&lt;/kbd&gt;&lt;kbd&gt;c&lt;/kbd&gt;. También se pueden abrir todos ejecutando &lt;kbd&gt;z&lt;/kbd&gt;&lt;kbd&gt;R&lt;/kbd&gt;&amp;gt; y cerrarlos con &lt;kbd&gt;z&lt;/kbd&gt;&lt;kbd&gt;M&lt;/kbd&gt;.&lt;/p&gt;

&lt;h3 id=&quot;set-exrc&quot;&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/198898/what-is-the-difference-between-exrc-and-vimrc&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;exrc&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Permite cargar configuraciones locales que se hallen en el mismo directorio donde se ejecuta &lt;em&gt;vim&lt;/em&gt;. Un uso podría ser tener diferentes &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;vimrc&lt;/code&gt; por proyecto. Lo más interesante de esta propiedad la sobrescritura es acumulativa, teniendo preferencia el archivo local. Esto permite modificar tabulaciones para un proyecto y mantener el resto con las opciones globales.&lt;/p&gt;

&lt;p&gt;Se recomienda el uso en conjunto con la propiedad &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'secure'&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;secure&lt;/code&gt;&lt;/a&gt;, para evitar código malicioso en entornos multiusuario. Puedes averiguar más sobre esto &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/starting.html#trojan-horse&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;De todas formas si lo que se pretende es modificar opciones visuales por proyecto, tal vez quieras dejar está opción desactivada y usar una menos sensible como &lt;em&gt;&lt;a href=&quot;http://editorconfig.org/&quot;&gt;editorconfig&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;No están todas las opciones ni mucho menos pero con esta configuración inicial es un primer paso para personalizar &lt;em&gt;vim&lt;/em&gt;. De hecho se pueden añadir nuevas combinaciones de comandos mediante el &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/map.html&quot;&gt;mapeo de claves&lt;/a&gt; lo que todavía lo tunearía aún más. Pero esto lo iremos viendo en posteriores artículos que cubran diferentes características de &lt;em&gt;vim&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Tras este artículo te recomiendo las lectura del &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/usr_05.html&quot;&gt;capítulo 5&lt;/a&gt; del manual de usuario y la sección perteneciente a la &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/starting.html#initialization&quot;&gt;inicialización&lt;/a&gt; de &lt;em&gt;vim&lt;/em&gt;. En el primero se explica con que opciones básicas de configuración y en el segundo los pasos realizados para arrancar &lt;em&gt;vim&lt;/em&gt;. Si deseas leer esta documentación en castellano/español puedes descargarla &lt;a href=&quot;https://app.assembla.com/wiki/show/vim-doc-es&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Por último, puedes encontrar el archivo completo con la configuración de &lt;em&gt;vim&lt;/em&gt; en el siguiente &lt;em&gt;gist&lt;/em&gt;.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/0241dc249fb5605f32ee66345165edfd.js&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;fuentes&quot;&gt;Fuentes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://dockyard.com/blog/categories/vim&quot;&gt;dockyard.com/blog/categories/vim&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://learnvimscriptthehardway.stevelosh.com&quot;&gt;learnvimscriptthehardway.stevelosh.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mislav.net/2011/12/vim-revisited&quot;&gt;mislav.net/2011/12/vim-revisited&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively&quot;&gt;yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dougblack.io/words/a-good-vimrc.html&quot;&gt;dougblack.io/words/a-good-vimrc.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://items.sjbach.com/319/configuring-vim-right&quot;&gt;items.sjbach.com/319/configuring-vim-right&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/amix/vimrc/blob/master/vimrcs/basic.vim&quot;&gt;github.com/amix/vimrc/blob/master/vimrcs/basic.vim&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/simonista/8703722&quot;&gt;gist.github.com/simonista/8703722&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yanpritzker.com/the-cleanest-vimrc-youll-ever-see-20f6158f1f1f&quot;&gt;yanpritzker.com/the-cleanest-vimrc-youll-ever-see-20f6158f1f1f&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="vim" /><category term="tutorial" /><category term="configuración" /><summary type="html">Tanto si acabas de empezar con vim, o no, este artículo te servirá para conocer cuales son las opciones básicas de configuración que debería contenerestar todo vimrc.</summary></entry><entry><title type="html">vim: introducción</title><link href="http://enrq.me/blog/vim-intro" rel="alternate" type="text/html" title="vim: introducción" /><published>2017-11-03T00:30:00+01:00</published><updated>2017-11-03T00:30:00+01:00</updated><id>http://enrq.me/blog/vim-intro</id><content type="html" xml:base="http://enrq.me/blog/vim-intro">&lt;figure&gt;
  &lt;div class=&quot;placeholder picture-shrink&quot; data-large=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Vimlogo.svg/1022px-Vimlogo.svg.png&quot;&gt;
    &lt;img src=&quot;&quot; class=&quot;img-small loaded&quot; alt=&quot;Logo de vim.&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 100.19569471624266%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Entiendo que si has llegado hasta aquí es porque tienes cierto interés en saber &lt;em&gt;vim&lt;/em&gt; y quieres aprender a manejarlo, o que ni tan siquiera sepas lo que es (aunque lo dudo) y hayas abierto este artículo por azar. Sea cual sea el caso, antes de empezar me gustaría que supieras que este artículo lo he enfocado para que puedas hacerte una idea generalizada sobre el editor. Por lo tanto no es esperes encontrar un tutorial al uso o una manual de referencia.&lt;/p&gt;

&lt;p&gt;En la primera parte se explican las características de &lt;em&gt;vim&lt;/em&gt; y su diferencia con el resto de editores. En el apartado de instalación y configuración se introducen una serie de comandos útiles para que puedas al menos comenzar a trastear con &lt;em&gt;vim&lt;/em&gt; sin que te frustres (créeme que si no conoces los cuatro comandos básicos te puedes volver loco). Por último verás cuales son los diferentes modos de edición.&lt;/p&gt;

&lt;p&gt;Sería interesante que pudieras leer esto mientras tienes abierto un terminal donde ir probando &lt;em&gt;vim&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Si deseas saber más puedes usar como referencia los enlaces al final del artículo.&lt;/p&gt;

&lt;p&gt;¡Bien! Ahora que ya sabes de qué va esto, ponte cómodo y a leer.&lt;/p&gt;

&lt;h2 id=&quot;introducción&quot;&gt;Introducción&lt;/h2&gt;
&lt;p&gt;Hay muchos editores de texto entre los que elegir. Muchos de ellos llevan mucho tiempo siendo usados y tienen el reconocimiento de la comunidad. Otros son más recientes pero están sido muy bien acogidos. Aunque al final las diferencias entre unos y otros dependen de dos factores: rendimiento y &lt;em&gt;features&lt;/em&gt; exclusivas. Aparte de estas dos características, la elección entre será totalmente subjetiva. De hecho, no importa el editor que escogas, la mayoría de las acciones estarán situadas en los mismos lugares. Lo cual facilita el cambio entre ellos. Posiblemente si esto no fuera así nadie cambiaría el editor con el que empezó.&lt;/p&gt;

&lt;p&gt;A diferencia de la mayoría de editores está &lt;em&gt;vim&lt;/em&gt;. Básicamente este programa funciona sobre una consola de comandos (no corre sobre un entorno gráfico). Todas sus acciones se basan en comandos de teclado (ausencia de ratón). Y sus diferentes modos de edición (&lt;em&gt;normal&lt;/em&gt;, &lt;em&gt;input&lt;/em&gt;, &lt;em&gt;visual&lt;/em&gt;) que más adelante verás. Solo estas tres características pueden ahuyentar al profano.&lt;/p&gt;

&lt;p&gt;La pregunta que te puedes estar haciendo es ¿por qué usar &lt;em&gt;vim&lt;/em&gt; si voy a tener que aprender desde cero para manejarlo? Pues bien, reconozco que al principio cuesta adaptarse a un editor como &lt;em&gt;vim&lt;/em&gt; donde nada está donde uno espera. Para que te hagas una idea de cuán distinto es, observa la imagen a continuación. Observa que interfaz tan minimalista.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/vim-intro-1.jpg&quot;&gt;
    &lt;img src=&quot;/assets/vim-intro-1.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Interfaz de vim.&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 64.56375838926175%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Si tras ver una pantalla completamente en negro sigues con ganas de darle una oportunidad, lo primero que deberías saber es que su curva de aprendizaje es de semanas, incluso meses. Una vez haya pasado este tiempo y tras un uso regular encontrarás todo su potencial. Por ejemplo, comprobarás lo rápido que es tener todas las acciones más comunes bajo los dedos o comandos más complejos mediante combinaciones de teclas.&lt;/p&gt;

&lt;p&gt;Otros de los beneficios de &lt;em&gt;vim&lt;/em&gt; es que puedes usarlo en entornos en remoto a través de conexiones &lt;em&gt;SSH&lt;/em&gt; que no ofrecen una interfaz gráfica. Si por algún motivo la conexión fuese lenta, &lt;em&gt;vim&lt;/em&gt; encadenaría las acciones tecleadas y las ejecutaría cuando pudiese en el mismo orden sin que se perdieran ¿No es genial esto? De hecho al funcionar sobre un terminal evita un consumo de recursos de sistema mayor, como lo haría cualquier otro editor en un entorno gráfico. Por supuesto, existen variantes de &lt;em&gt;vim&lt;/em&gt; que se pueden usar en un entorno gráfico, aunque entonces perdería la gracia.&lt;/p&gt;

&lt;p&gt;Si te asusta lo de no poder usar el ratón no debes preocuparte. &lt;em&gt;vim&lt;/em&gt; ofrece la posibilidad de habilitarlo añadiendo un parámetro en su configuración. Tras reiniciarlo podrás usar el ratón al igual que en cualquier entorno gráfico. Como comprobarás &lt;em&gt;vim&lt;/em&gt; es altamente configurable.&lt;/p&gt;

&lt;p&gt;También puedes abrir diferentes pestañas donde poder mantener los archivos abiertos mientras editas otro.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/vim-intro-2.jpg&quot;&gt;
    &lt;img src=&quot;/assets/vim-intro-2.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Pestañas en vim.&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 42.513368983957214%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Otra característica muy interesante que permite &lt;em&gt;vim&lt;/em&gt; es poder dividir la ventana con diferentes archivos.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/vim-intro-3.jpg&quot;&gt;
    &lt;img src=&quot;/assets/vim-intro-3.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Ventanas partias en vim.&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 67.5%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Por otro lado también incorpora un explorador de carpetas. Algo rudimentario pero funcional al fin y al cabo. Aunque esta opción la acabarás sustituyendo por un plugin como &lt;a href=&quot;https://github.com/scrooloose/nerdtree&quot;&gt;&lt;em&gt;NERDTree&lt;/em&gt;&lt;/a&gt;. Una solución mucho más completa que el navegador por defecto.&lt;/p&gt;

&lt;p&gt;Otra particularidad de &lt;em&gt;vim&lt;/em&gt; es la amplia gama de &lt;em&gt;plugins&lt;/em&gt; y librerías adicionales que existen. La mayoría de estas son mantenidas por una comunidad muy activa, garantizando su usabilidad a largo plazo. Si quieres ver algunos ejemplos entra en &lt;a href=&quot;https://vimawesome.com/&quot;&gt;&lt;em&gt;vimawesome.com&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Como puedes ver, &lt;em&gt;vim&lt;/em&gt; es un editor que ofrece las mismas posibilidades sino más que otros. Su gran dificultad es su curva de aprendizaje pero si has llegado hasta aquí imagino que sigues teniendo cierto interés en aprender a manejarlo. Si es así entonces el siguiente paso es instalarlo y configurarlo.&lt;/p&gt;

&lt;h2 id=&quot;instalación-y-configuración&quot;&gt;Instalación y Configuración&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Vim&lt;/em&gt; se puede instalar de varias maneras diferentes, al igual que cualquier otro programa. Para los usuarios de Windows lo más normal es descargar un archivo instalable y lanzarlo. Para el resto de sistemas basados en UNIX lo más sencillo es utilizar un gestor de paquetes e instalarlo desde ahí. Mac tampoco deja de ser un UNIX aunque no viene con un gestor instalado por defecto (bueno, existe el &lt;em&gt;App Store&lt;/em&gt; pero no vale). Para poder instalar las diferentes librerías de manera automática te recomiendo instalar uno. El más extendido hoy día es &lt;a href=&quot;https://brew.sh/&quot;&gt;&lt;em&gt;homebrew&lt;/em&gt;&lt;/a&gt;, echa un vistazo a su página y sigue los pasos para instalarlo.&lt;/p&gt;

&lt;p&gt;La otra opción es ir a la &lt;a href=&quot;http://www.vim.org/download.php&quot;&gt;&lt;em&gt;página oficial de descargas de vim&lt;/em&gt;&lt;/a&gt; y bajarlo.&lt;/p&gt;

&lt;p&gt;Una vez lo hayas instalado abre una consola de comandos o terminal y teclea la siguiente orden.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este comando abrirá el programa mostrando la siguiente pantalla.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/vim-intro-4.jpg&quot;&gt;
    &lt;img src=&quot;/assets/vim-intro-4.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Pantalla de inicio de vim.&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 60.60606060606061%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Como antes dije, el ratón no funciona aunque se puede activar. Además también habrás comprobado que no puedes escribir. Esto se debe a que &lt;em&gt;vim&lt;/em&gt; por defecto arranca con el modo &lt;em&gt;normal&lt;/em&gt; activado. Más adelante veremos que es eso de los modos.&lt;/p&gt;

&lt;p&gt;Para poder escribir todo lo que tienes que hacer es pulsar la tecla &lt;kbd&gt;i&lt;/kbd&gt;. A continuación puedes ver que el cursor ha cambiado y en la parte inferior de la pantalla pegado a la izquierda ha aparecido el texto &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;-- INSERT --&lt;/code&gt;. Esto indica que ha cambiado de modo y ya puedes escribir como lo harías en un editor común.&lt;/p&gt;

&lt;p&gt;Para activar el ratón primero pulsa &lt;kbd&gt;esc&lt;/kbd&gt; para regresar al modo normal. Sabrás que estás en el modo normal porque el texto insert inferior habrá desaparecido. Ahora pulsa la tecla &lt;kbd&gt;:&lt;/kbd&gt;. Puedes observar que donde apareció el texto &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;-- INSERT --&lt;/code&gt; muestra ahora dos puntos. Esto indica que puedes escribir los comandos que actuarán sobre el texto. Básicamente el modo &lt;em&gt;normal&lt;/em&gt; de &lt;em&gt;vim&lt;/em&gt; es cómo trabajar con el texto de un archivo como si fuera un terminal, lanzando acciones que modifican el texto.&lt;/p&gt;

&lt;p&gt;A continuación de estos dos puntos introduces el siguiente comando y pulsas &lt;kbd&gt;Enter&lt;/kbd&gt;. Tras esto ya podrás usar el ratón.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;:set &lt;span class=&quot;nv&quot;&gt;mouse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;a&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;El único problema es que cuando cierres &lt;em&gt;vim&lt;/em&gt; este parámetro no se mantendrá. Para que este cambio no se pierda y tengas que volver a declararlo debes editar un archivo con el nombre &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.vimrc&lt;/code&gt;. En ocasiones en Windows puede que este archivo sea nombrado como&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_vimrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Una forma de averiguar este nombre es tecleando &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:version&lt;/code&gt;. Esto muestra la versión de &lt;em&gt;vim&lt;/em&gt;, las &lt;em&gt;features&lt;/em&gt; incluidas y el nombre de archivo de configuración entre otras cosas. En la imagen inferior puedes ver el resultado de este comando.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/vim-intro-5.jpg&quot;&gt;
    &lt;img src=&quot;/assets/vim-intro-5.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Pantalla de inicio de vim.&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 70.87378640776699%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Para hallar el nombre del archivo de configuración debes buscar el texto &lt;em&gt;user vimrc file&lt;/em&gt;. Lo más común es que el texto a la derecha de los dos puntos sea &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.vimrc&lt;/code&gt;. Si no fuese así al menos ya sabrías cómo nombrar archivo de configuración.&lt;/p&gt;

&lt;p&gt;Lo normal es que no exista este archivo así que tendrás que crearlo. Si queremos que todos los cambios sean permanentes en cualquier ruta donde se ejecute &lt;em&gt;vim&lt;/em&gt; este archivo se deberá instalar donde apunte la variable de sistema &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;/code&gt;. Un aspecto interesante sobre la configuración de &lt;em&gt;vim&lt;/em&gt; es que estas propiedades pueden ser sobreescritas si en el directorio donde se ejecuta el programa existe otro &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.vimrc&lt;/code&gt;. Por lo tanto prevalecen los parámetros en este último archivo de configuración.&lt;/p&gt;

&lt;p&gt;Dicho esto, teclea desde &lt;em&gt;vim&lt;/em&gt; el siguiente comando.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;:echo &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;El resultado del comando es la ruta donde guardar el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.vimrc&lt;/code&gt; o el nombre que especifique &lt;em&gt;vim&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A continuación edita ese archivo con la siguiente orden (siempre desde &lt;em&gt;vim&lt;/em&gt;).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;:e! &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.vimrc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si existe el archivo mostrará una serie de parámetros de configuración en cada nueva línea. En caso contrario estará vacío. Pulsa &lt;kbd&gt;o&lt;/kbd&gt; para añadir un línea nueva justo debajo del cursor y cambiar al modo &lt;em&gt;insert&lt;/em&gt;. Escribe el mismo comando que ejecutaste para habilitar el ratón (&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;mouse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;a&lt;/code&gt;). Lo siguiente es guardar el archivo mediante la acción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:wq&lt;/code&gt;. &lt;kbd&gt;w&lt;/kbd&gt; sirve para guardar el documento y &lt;kbd&gt;q&lt;/kbd&gt; para salir. Tras esto podrás usar el ratón en &lt;em&gt;vim&lt;/em&gt; como en entorno gráfico.&lt;/p&gt;

&lt;p&gt;Otra forma más rápida y sencilla sería ejecutar &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:echo &lt;span class=&quot;nv&quot;&gt;$MYVIMRC&lt;/span&gt;&lt;/code&gt;. Esto muestra la ruta y el archivo donde se halla la confirguración de &lt;em&gt;vim&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A partir de ahora cualquier cambio que desees aplicar de forma permanente en &lt;em&gt;vim&lt;/em&gt; deberás escribirlo en este archivo. Por ejemplo podrás cambiar el esquema de colores, configurar el tabulador o el tipo de fuente, cambiar las acciones o instalar &lt;a href=&quot;https://vim.zeef.com/andrew.krawchyk&quot;&gt;&lt;em&gt;plugins&lt;/em&gt;&lt;/a&gt;. Aunque para esto último sería mejor optar por un gestor de plugins cómo &lt;a href=&quot;https://github.com/VundleVim/Vundle.vim&quot;&gt;Vundle&lt;/a&gt; o &lt;a href=&quot;https://github.com/junegunn/vim-plug&quot;&gt;vim-plug&lt;/a&gt;. Hay un hilo interesante en &lt;a href=&quot;https://www.reddit.com/r/vim/comments/4qo7ur/which_plugin_installer_or_vim_package_manager/&quot;&gt;reddit&lt;/a&gt; donde poder saber que opción elegir.&lt;/p&gt;

&lt;p&gt;Por último &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/quickref.html#option-list&quot;&gt;aquí&lt;/a&gt; puedes ver la lista completa de opciones de configuración. Aunque si lo prefieres puedes usar este otro &lt;a href=&quot;https://dougblack.io/words/a-good-vimrc.html&quot;&gt;enlace&lt;/a&gt; mucho más sucinto y explicativo.&lt;/p&gt;

&lt;h2 id=&quot;los-modos-de-vim&quot;&gt;Los modos de &lt;em&gt;vim&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Vim ofrece la posibilidad de trabajar con el texto de tres maneras diferentes: &lt;em&gt;normal&lt;/em&gt;, &lt;em&gt;insert&lt;/em&gt; y &lt;em&gt;visual&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;normal&quot;&gt;&lt;em&gt;normal&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Este es el modo por defecto nada más abrir &lt;em&gt;vim&lt;/em&gt;. Cómo podrás observar si lo tienes abierto no permite la edición del texto, al menos cómo lo harías en cualquier editor. Aunque no es cierto que no se pueda editar. Todos las acciones de edición son ejecutadas a través de un comando asociado a un botón del teclado. Por ejemplo, borrar un carácter se haría con la letra &lt;kbd&gt;x&lt;/kbd&gt;.&lt;/p&gt;

&lt;p&gt;Muchas de estas acciones pueden ser usadas en combinación con comandos de movimiento y repetición. Un ejemplo sería al pulsar la tecla &lt;kbd&gt;3&lt;/kbd&gt; le estaríamos indicando a &lt;em&gt;vim&lt;/em&gt; que ejecute la siguiente acción tres veces. Por lo tanto usado en combinación con &lt;kbd&gt;x&lt;/kbd&gt; —&lt;kbd&gt;3&lt;/kbd&gt;&lt;kbd&gt;x&lt;/kbd&gt;— se borrarán los tres siguientes caracteres hacia la derecha.&lt;/p&gt;

&lt;p&gt;Otro ejemplo combinatorio sería &lt;kbd&gt;3&lt;/kbd&gt;&lt;kbd&gt;d&lt;/kbd&gt;&lt;kbd&gt;l&lt;/kbd&gt;. En este caso tendrías el mismo resultado que en el ejemplo anterior. Al igual que &lt;kbd&gt;x&lt;/kbd&gt;, &lt;kbd&gt;d&lt;/kbd&gt; también se utiliza para borrar pero con la diferencia que espera un comando de movimiento/dirección.&lt;/p&gt;

&lt;p&gt;Los comandos de movimiento originales son &lt;kbd&gt;h&lt;/kbd&gt;&lt;kbd&gt;j&lt;/kbd&gt;&lt;kbd&gt;k&lt;/kbd&gt;&lt;kbd&gt;l&lt;/kbd&gt;. Esto es así debido a que el creador de &lt;a href=&quot;https://es.wikipedia.org/wiki/Vi&quot;&gt;&lt;em&gt;vi&lt;/em&gt;&lt;/a&gt; (&lt;em&gt;vim&lt;/em&gt; es una versión mejorada de &lt;em&gt;vi&lt;/em&gt; como especifican sus siglas, Vi IMproved) lo hizo con &lt;a href=&quot;http://www.catonmat.net/blog/why-vim-uses-hjkl-as-arrow-keys/&quot;&gt;terminal ADM-3A&lt;/a&gt; a mediados de los 70 y desde entonces se ha mantenido.
Abajo puedes ver los diferentes movimientos.&lt;/p&gt;

&lt;table class=&quot;arrows-table table-half&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td colspan=&quot;2&quot;&gt;&amp;#8593;k&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;#8592;h&lt;/td&gt;
      &lt;td&gt;l&amp;#8594;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td colspan=&quot;2&quot;&gt;&amp;#8595;j&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;De todas formas no te abrumes si ves que te cuesta moverte con ellos. Normalmente por defecto también vienen activadas las teclas de dirección.&lt;/p&gt;

&lt;p&gt;Lo recomendable sería usar &lt;kbd&gt;h&lt;/kbd&gt;&lt;kbd&gt;j&lt;/kbd&gt;&lt;kbd&gt;k&lt;/kbd&gt;&lt;kbd&gt;l&lt;/kbd&gt; para mover el cursor siempre que estés en modo normal. El motivo no es otro que por comodidad y rapidez. Piensa que si cada vez que quieras mover el cursor debes desplazar la mano hasta donde se encuentran la teclas de dirección. Que este gesto lo hagas un par de veces no pasa nada pero cuando estás durante todo el día trabajando es muy poco práctico retirar la mano cada vez que muevas el cursor. Otro motivo es el tiempo consumido en cada desplazamiento de la mano, aunque este tampoco me parece un motivo de peso, al fin y al cabo no estás todo el día escribiendo a una velocidad endiablada. Por lo tanto, tener todas las acciones posibles bajo los dedos es la opción más eficiente. De hecho, este suele ser el principal motivo por el que un desarrollador utliza &lt;em&gt;vim&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;En definitiva debe quedarte claro que en este modo es donde pasarás la mayor parte del tiempo.&lt;/p&gt;

&lt;h3 id=&quot;insert&quot;&gt;&lt;em&gt;insert&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Este es el modo de edición que la mayoría de editores ofrecen. Se accede desde el modo mediante alguno de los siguientes comandos.&lt;/p&gt;

&lt;table class=&quot;commands-table solid-table table-full&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;b&gt;Acciones&lt;/b&gt;&lt;/td&gt;
      &lt;td&gt;&lt;b&gt;Descripción&lt;/b&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;a&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Inserta texto a la derecha del cursor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;i&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Inserta texto a la izquierda del cursor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;A&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Inserta texto al final de línea donde se halle el cursor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;I&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Inserta al inicio de la línea donde se halle el cursor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Borra todo lo que se encuntre a la derecha del cursor e inserta al final de la línea.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;kbd&gt;s&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Borra el carácter debajo del cursor y permite insertar justo en el mismo lugar.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Cómo habrás observado los comandos son diferentes entre mayúsculas y minúsculas. Esto amplía duplica el abanico de posibilidades de acciones por tecla.&lt;/p&gt;

&lt;p&gt;De este modo no hay mucho que contar (al menos en un texto introductorio). Funciona igual que un editor común, de hecho para mover el cursor aquí usarás las teclas de dirección aunque realmente deberías regresar al modo &lt;em&gt;normal&lt;/em&gt; y mover el cursor.&lt;/p&gt;

&lt;p&gt;Al principio lo más probable es que pases más tiempo en este modo. Poco a poco te irás acostumbrando al modo &lt;em&gt;normal&lt;/em&gt; y ocasionalmente accederás al modo &lt;em&gt;insert&lt;/em&gt; sino es para insertar texto.&lt;/p&gt;

&lt;p&gt;Para regresar al modo normal tan solo hay que teclear escape &lt;kbd&gt;esc&lt;/kbd&gt;. De hecho para salir de cualquier modo.&lt;/p&gt;

&lt;h3 id=&quot;visual&quot;&gt;&lt;em&gt;visual&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Este modo nos permite seleccionar y operar con el texto al igual que harías con otros editores. Aunque, como bien habrás supuesto, en &lt;em&gt;vim&lt;/em&gt; hay una serie de particularidades a destacar.&lt;/p&gt;

&lt;p&gt;Vim ofrece 3 modos de selección de texto: &lt;em&gt;visual&lt;/em&gt;, &lt;em&gt;linewise&lt;/em&gt; o &lt;em&gt;block&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&quot;visual-1&quot;&gt;&lt;em&gt;visual&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;Se accede pulsando la tecla &lt;kbd&gt;v&lt;/kbd&gt;. La selección del texto se hace moviendo el cursor hacia donde desees con las letras &lt;kbd&gt;h&lt;/kbd&gt;&lt;kbd&gt;j&lt;/kbd&gt;&lt;kbd&gt;k&lt;/kbd&gt;&lt;kbd&gt;l&lt;/kbd&gt; o las flechas si lo prefieres. También puedes seleccionar con combinaciones de acciones. Por ejemplo, si tecleas &lt;kbd&gt;v&lt;/kbd&gt;&lt;kbd&gt;8&lt;/kbd&gt;&lt;kbd&gt;j&lt;/kbd&gt; quedará marcado el texto desde donde se encuentre el cursor hasta 8 líneas más abajo correspondiendo con la misma posición del cursor si es que puede.&lt;/p&gt;

&lt;p&gt;Tras la selección del texto, cualquier acción que ejecutes actuará sobre el mismo.&lt;/p&gt;

&lt;h4 id=&quot;linewise&quot;&gt;&lt;em&gt;linewise&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;Para acceder a este modo teclea &lt;kbd&gt;V&lt;/kbd&gt;. La diferencia con el modo &lt;em&gt;visual&lt;/em&gt; es que opera con líneas de texto enteras.&lt;/p&gt;

&lt;h4 id=&quot;block&quot;&gt;&lt;em&gt;block&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;Este modo permite seleccionar el texto mediante secciones rectangulares de texto. El acceso se hace mediante las teclas &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;V&lt;/kbd&gt;. Cómo puedes ver en el ejemplo siguiente permite seleccionar por columnas.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/vim-intro-6.jpg&quot;&gt;
    &lt;img src=&quot;/assets/vim-intro-6.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Selección en bloque.&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 67.01352757544224%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Hasta aquí la introducción a &lt;em&gt;vim&lt;/em&gt;. Espero que el artículo te haya servido para hacerte una idea de las posibilidades que ofrece este editor. Personalmente hace años que lo utilizo y estoy encantado con su rendimiento. Además de no usar el ratón lo cual es muy &lt;em&gt;cool&lt;/em&gt;. Como un hacker de película (que no falte el esnobismo).&lt;/p&gt;

&lt;p&gt;Bromas aparte, si que es cierto que una vez habituado, la ejecución de los comandos más comunes se realizan de forma casi automática y en lo que tardas en pulsar unas teclas.&lt;/p&gt;

&lt;p&gt;Para finalizar y como buen punto de partida te recomiendo que hagas el tutorial instalado conjuntamente con &lt;em&gt;vim&lt;/em&gt;, &lt;em&gt;vimtutor&lt;/em&gt;. Para saber más sobre éste tan solo debes teclear &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/usr_01.html#01.3&quot;&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:help vimtutor&lt;/code&gt;&lt;/a&gt; desde &lt;em&gt;vim&lt;/em&gt;. También puedes consultar toda la documentación oficial en el propio editor teclando &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;:help&lt;/code&gt;. Aunque probablemente al principio te parezca más cómodo leer el mismo contenido en una &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/usr_toc.html&quot;&gt;página web&lt;/a&gt;. Otro recurso interesante es tener una chuleta al lado para poder consultar rápidamente que comando necesitas. Si buscas &lt;a href=&quot;https://www.google.es/search?q=vim+cheat+sheet&amp;amp;oq=vim+cheat+sheet&amp;amp;aqs=chrome.0.69i59j69i65j69i60l2j0l2.3214j0j4&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot;&gt;&lt;em&gt;vim cheat sheet&lt;/em&gt; en google&lt;/a&gt; encontrarás decenas de ellas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://vim-adventures.com/&quot;&gt;&lt;em&gt;Vim Adventures&lt;/em&gt;&lt;/a&gt; es otra opción interesate y divertida donde aprender &lt;em&gt;vim&lt;/em&gt; jugando. Si prefieres algo más austero también puedes probar con otros tutoriales interactivos como &lt;a href=&quot;http://www.openvim.com/&quot;&gt;&lt;em&gt;openvim&lt;/em&gt;&lt;/a&gt; o &lt;a href=&quot;http://vimgenius.com/&quot;&gt;&lt;em&gt;vimgenius&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;fuentes&quot;&gt;Fuentes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.vim.org/&quot;&gt;vim.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/usr_toc.html&quot;&gt;vimdoc.sourceforge.net/htmldoc/usr_toc.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pragprog.com/book/dnvim2/practical-vim-second-edition&quot;&gt;pragprog.com/book/dnvim2/practical-vim-second-edition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vimdoc.sourceforge.net/&quot;&gt;vimdoc.sourceforge.net&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vim.wikia.com/wiki/Vim_Tips_Wiki&quot;&gt;vim.wikia.com/wiki/Vim_Tips_Wiki&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://vimawesome.com/&quot;&gt;vimawesome.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html&quot;&gt;viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://vim.rtorr.com/&quot;&gt;vim.rtorr.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.labnol.org/internet/learning-vim-for-beginners/28820/&quot;&gt;labnol.org/internet/learning-vim-for-beginners/28820/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vimcasts.org/&quot;&gt;vimcasts.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="vim" /><category term="intro" /><category term="modos-vim" /><category term="tutorial" /><summary type="html">Si todavía no conoces vim o si lo conoces pero te parece marciano su funcionamiento, echa un vistazo a este breve tutorial sobre como emplearlo y sus diferentes modos de edición.</summary></entry><entry><title type="html">Cómo crear un blog o sitio web con Jekyll</title><link href="http://enrq.me/blog/como-crear-un-blog-con-jekyll" rel="alternate" type="text/html" title="Cómo crear un blog o sitio web con Jekyll" /><published>2017-04-03T01:00:00+02:00</published><updated>2017-04-03T01:00:00+02:00</updated><id>http://enrq.me/blog/como-crear-un-blog-con-jekyll</id><content type="html" xml:base="http://enrq.me/blog/como-crear-un-blog-con-jekyll">&lt;p&gt;En este artículo voy a explicar cómo puedes crear tu propio blog o página web. El mismo lo he concebido como un taller donde podrás ver paso a paso desde la instalación de las herramientas necesarias hasta la finalización del sitio web.&lt;/p&gt;

&lt;p&gt;Antes de empezar debo advertirte que para la realización de este taller, son necesarios unos conocimientos mínimos en &lt;em&gt;&lt;a href=&quot;https://es.wikipedia.org/wiki/HTML5&quot;&gt;HTML&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href=&quot;https://es.wikipedia.org/wiki/Hoja_de_estilos_en_cascada&quot;&gt;CSS&lt;/a&gt;&lt;/em&gt; y programación en &lt;em&gt;&lt;a href=&quot;https://es.wikipedia.org/wiki/JavaScript&quot;&gt;Javascript&lt;/a&gt;&lt;/em&gt;. La finalidad del artículo no es solo publicar contenido (artículos o textos) sino tener un completo control del contenedor (la página web) para poder modificar su estructura, cambiar estilos y/o añadir comportamiento.&lt;/p&gt;

&lt;p&gt;Tampoco es necesario ser una experta o experto en esta disciplina, solo hay que tener ganas y curiosidad. Cómo verás el programa que vamos a usar nos ofrece unos diseños predefinidos, lo cual facilitará la labor de arranque inicial.&lt;/p&gt;

&lt;p&gt;También me gustaría recalcar que no voy a profundizar en las tecnologías mencionadas. Si quieres aprender o tener un mejor dominio en las mismas, te recomiendo que eches un vistazo otros tutoriales, como por ejemplo los de &lt;a href=&quot;http://librosweb.es&quot;&gt;librosweb&lt;/a&gt;. Puedes encontrar otras páginas web de aprendizaje realizando una sencilla búsqueda en &lt;em&gt;&lt;a href=&quot;https://www.google.es/?gws_rd=ssl#safe=active&amp;amp;q=curso+de+html+y+css&amp;amp;*&quot;&gt;google&lt;/a&gt;&lt;/em&gt;. Abajo muestro unos resultados de la búsqueda indicada.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://devcode.la/cursos/html-css/&quot;&gt;devcode.la/cursos/html-css&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codecademy.com/es/tracks/html-css-traduccion-al-espanol-america-latina-clone&quot;&gt;codecademy.com/es/tracks/html-css-traduccion-al-espanol-america-latina-clone&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.aulafacil.com/cursos/t2204/informatica/crear-paginas-web/html&quot;&gt;aulafacil.com/cursos/t2204/informatica/crear-paginas-web/html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blogthinkbig.com/20-cursos-programacion-gratuitos-tomar-linea/&quot;&gt;blogthinkbig.com/20-cursos-programacion-gratuitos-tomar-linea&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lo que si haré, en la medida de lo que me sea posible, es aportar explicaciones sobre conceptos que considere necesarios para un mejor entendimiento en la creación de páginas web. Así que si eres de esos que no se asusta ensuciarse las manos y sientes curiosidad por cómo funcionan las cosas (una página web en este caso) entonces sigue leyendo. En caso contrario, si lo único que deseas es publicar contenido y no te importa el aspecto del contenedor, lo mejor es busques otras opciones como pueda ser &lt;em&gt;&lt;a href=&quot;https://medium.com/&quot;&gt;medium&lt;/a&gt;&lt;/em&gt; o &lt;em&gt;&lt;a href=&quot;https://es.wordpress.com/&quot;&gt;wordpress&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Por cierto, quiero advertirte que para el desarrollo de este taller he usado un sistema operativo &lt;em&gt;MacOS&lt;/em&gt;. Si usas un sistema &lt;em&gt;Unix/Linux&lt;/em&gt; casi la mayoría de comandos que utilice son los mismos. Si por contra utilizas un &lt;em&gt;Windows&lt;/em&gt;, será mejor que te deshagas de él cuanto antes. Bromas a parte, cuando sea necesario también incluiré cómo hacerlo con &lt;em&gt;Windows&lt;/em&gt; aunque no garantizo su completo funcionamiento.&lt;/p&gt;

&lt;p&gt;Antes de empezar, si quieres puedes descargar el código fuente usado en el tutorial desde &lt;a href=&quot;https://github.com/emoriarty/jekyll-tut&quot;&gt;aquí&lt;/a&gt;. De esta forma puedes contrastar los avances que vayas realizando con el proyecto ya finalizado como referencia.&lt;/p&gt;

&lt;p&gt;Por último, si os interesa podéis leer las &lt;a href=&quot;/motivaciones&quot;&gt;motivaciones&lt;/a&gt; que me han llevado a crear este blog. Probablemente tú tengas otras distintas y aunque no sean las mismas ni sepa cuáles son, sí hay una cosa que es cierta: si estás leyendo este artículo es porque estás pensando en crear uno. Así que sin más dilación empecemos con el taller.&lt;/p&gt;

&lt;h2 id=&quot;consideraciones-antes-de-empezar&quot;&gt;Consideraciones antes de empezar&lt;/h2&gt;
&lt;p&gt;Al principio estuve valorando si utilizar un servicio de publicación de blogs o crear el mío propio. De los primeros hay muy buenos, cómo puede ser &lt;a href=&quot;https://medium.com/&quot;&gt;medium&lt;/a&gt;,  pero no dejan mucho margen para la personalización de la página. Cierto es que cada vez ofrecen más opciones de adaptación cómo cambiar el color de la cabecera o añadir un logo propio. Aunque la idea de una estructura y diseño impuestos no me pareció nada atractiva de tal manera que me decidí por la segunda opción. Siendo ésta mucho más versátil me daba mucha pereza tener que hacerlo todo desde cero. Al final opté por una tercera vía: utilizar un &lt;a href=&quot;https://er1x.github.io/2015/12/generadores-web-estaticas/&quot;&gt;generador de páginas estáticas&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lo interesante de un generador es que puedes redactar los artículos en archivos de texto plano y de fácil lectura, evitando el engorro y distracciones que un archivo &lt;em&gt;HTML&lt;/em&gt; puede acarrear. Aunque esto no es del todo cierto, os aseguro que es mucho más sencillo que escribir un texto de dos mil palabras en un &lt;em&gt;HTML&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Cuando utilizo el término &lt;strong&gt;página estática&lt;/strong&gt; no pretendo decir que se quede congelada y ni tan siquiera se pueda hacer &lt;em&gt;&lt;a href=&quot;https://es.wikipedia.org/wiki/Scroll&quot;&gt;scroll&lt;/a&gt;&lt;/em&gt;. Lo que expresa es que no habrá ningún tipo de interacción con el servidor más que devolver la página previamente alojada. Es decir, no habrá ninguna base de datos ni servicios web desde donde recuperar los datos necesarios para construir la página por cada petición de usuario. Este tipo de página web se le denomina &lt;strong&gt;página dinámica&lt;/strong&gt;. Bien cabe remarcar, que los servicios web se pueden utilizar desde la propia página pero para ello será necesario el uso de librerías Javascript. En definitiva, una página estática es un archivo permanente que será devuelto por el servidor sin previa tratamiento. Para saber más puede consultar en este &lt;a href=&quot;https://es.wikipedia.org/wiki/P%C3%A1gina_web#P.C3.A1ginas_est.C3.A1ticas_versus_p.C3.A1ginas_din.C3.A1micas&quot;&gt;enlace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hay una amplia oferta de &lt;a href=&quot;https://github.com/pinceladasdaweb/Static-Site-Generators&quot;&gt;generadores&lt;/a&gt;. Cual utilices dependerá de tus conocimientos y la experiencia que hayas tenido con alguno. Pero al final cualquiera de estas herramientas requerirán, en mayor o menor medida, tener conocimientos en &lt;em&gt;HTML&lt;/em&gt;, &lt;em&gt;CSS&lt;/em&gt; y &lt;em&gt;Javascript&lt;/em&gt;. Personalmente recomiendo siempre optar entre las cinco más usadas y entre estas las que mayor soporte ofrezca.&lt;/p&gt;

&lt;p&gt;De entre todas la opciones posibles al final decidí emplear &lt;em&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/em&gt;. También estuve considerando &lt;em&gt;&lt;a href=&quot;https://middlemanapp.com/&quot;&gt;middleman&lt;/a&gt;&lt;/em&gt; pero &lt;em&gt;Jekyll&lt;/em&gt; lleva más tiempo siendo desarrollado, lo cual garantiza que los posibles errores de diseño ya fueron corregidos. En el momento de la edición de este artículo, la última versión disponible es la &lt;a href=&quot;https://jekyllrb.com/news/2017/03/02/jekyll-3-4-1-released/&quot;&gt;3.4.2&lt;/a&gt;. Otra buena razón por la que lo elegí es que un sitio web cómo &lt;em&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;Github&lt;/a&gt;&lt;/em&gt; lo utiliza como motor interno para la generación de páginas estáticas. Lo cual avala un continuo mantenimiento además de ofrecer una buena documentación. Cómo curiosidad, la misma herramienta fue creada por &lt;a href=&quot;https://en.wikipedia.org/wiki/Tom_Preston-Werner&quot;&gt;uno de los co-fundadores&lt;/a&gt; de &lt;em&gt;Github&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Por tanto, para utilizar Jekyll necesitaremos instalar las siguientes herramientas.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;un terminal o consola de comandos (todos los s.o. la tienen),&lt;/li&gt;
  &lt;li&gt;un editor de textos (&lt;em&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;visual studio code&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;sublime&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href=&quot;https://atom.io/&quot;&gt;atom&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href=&quot;http://www.vim.org/&quot;&gt;vim&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href=&quot;https://notepad-plus-plus.org/&quot;&gt;notepad++&lt;/a&gt;&lt;/em&gt;),&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://www.ruby-lang.org/es/&quot;&gt;el intérprete de Ruby&lt;/a&gt;&lt;/em&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Jekyll&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No te preocupes si no conoces alguno de los puntos en el listado anterior, los explicaré más adelante. Así que teniendo claro que es lo que necesitamos, procedamos a hacer la instalación.&lt;/p&gt;

&lt;h2 id=&quot;instalación&quot;&gt;Instalación&lt;/h2&gt;
&lt;p&gt;Para la instalación necesitaremos abrir un terminal y nos dirigimos al directorio donde queramos situar el proyecto. Una vez dentro, lo primero será confirmar que ruby está instalado en el sistema y que su versión sea igual o superior a la 2.0.&lt;/p&gt;

&lt;p&gt;Para comprobar si está instalado teclea lo siguiente en la consola.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ruby -v&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si el mensaje devuelto se muestra &lt;code class=&quot;highlighter-rouge&quot;&gt;bash: ruby: command not found&lt;/code&gt; entonces es que no existe. En caso contrario devolverá un mensaje informando de la versión utilizada. En muestra el siguiente mensaje.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;ruby 2.4.0p0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2016-12-24 revision 57164&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;x86_64-darwin16]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En caso de no tenerlo o ser una versión anterior, la mejor opción es utilizar un gestor de versiones. Imagino que habrán algunos más disponibles pero los más conocidos son &lt;em&gt;&lt;a href=&quot;https://rvm.io/&quot;&gt;rvm&lt;/a&gt;&lt;/em&gt; y &lt;em&gt;&lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt;&lt;/em&gt;. Personalmente utilizo &lt;em&gt;rbenv&lt;/em&gt;, me gusta la sencillez con la que maneja las diferentes versiones de ruby simplemente modificando el &lt;em&gt;PATH&lt;/em&gt; del sistema. De todas formas con las dos herramientas es bien sencillo instalar &lt;em&gt;Ruby&lt;/em&gt;. Por costumbre de uso, vamos a continuar la instalación con &lt;em&gt;rbenv&lt;/em&gt;. Si utilizas un Mac, recomiendo utilizar &lt;em&gt;&lt;a href=&quot;https://brew.sh/index_es.html&quot;&gt;Homebrew&lt;/a&gt;&lt;/em&gt; para instalar &lt;em&gt;rbenv&lt;/em&gt;. Una vez hayas instalado &lt;em&gt;Homebrew&lt;/em&gt;, ejecuta el siguiente comando en el terminal que previamente teníamos abierto.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;brew install rbenv&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;No voy a entrar en detalles en cuanto a la instalación de &lt;em&gt;rbenv&lt;/em&gt;. Para ello puedes consultar en su página de github donde viene muy bien detallado &lt;a href=&quot;https://github.com/rbenv/rbenv#installation&quot;&gt;cómo hacerlo&lt;/a&gt;. Eso sí, es requisito indispensable saber leer en inglés.&lt;/p&gt;

&lt;p&gt;Tras la intalación de rbenv, el siguiente paso será ejecutar el siguiente comando.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rbenv install 2.4.0 &lt;span class=&quot;c&quot;&gt;# número de versión debe superior a la 2.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Acto seguido instalaremos &lt;em&gt;bundler&lt;/em&gt;. Esta herramienta nos ayudará a gestionar las dependencias que vayamos a utilizar en nuestro proyecto &lt;em&gt;Jekyll&lt;/em&gt; a través de un archivo llamado &lt;em&gt;Gemfile&lt;/em&gt;. Por cierto, en &lt;em&gt;Ruby&lt;/em&gt; a las librerías se les llaman gemas, por tanto de ahora en adelante me referiré a ellas como tales.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gem install bundler&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Realizados los dos pasos anteriores satisfactoriamente, procederemos a instalar &lt;em&gt;Jekyll&lt;/em&gt;. Para ello, utilizaremos la herramienta &lt;em&gt;gem&lt;/em&gt; que viene instalado junto con &lt;em&gt;Ruby&lt;/em&gt;.  &lt;em&gt;gem&lt;/em&gt; es un sistema de gestión de paquetes, de hecho &lt;em&gt;bundler&lt;/em&gt; hace uso de este comando. Teclea lo siguiente en la consola.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gem install jekyll&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si todo ha ido bien deberías ver en la terminal lo siguiente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Fetching: jekyll-3.4.0.gem &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;100%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Successfully installed jekyll-3.4.0
Parsing documentation &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;jekyll-3.4.0
Installing ri documentation &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;jekyll-3.4.0
Done installing documentation &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;jekyll after 2 
seconds
1 gem installed&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;¡Bravo! Ya tenemos &lt;em&gt;Jekyll&lt;/em&gt; instalado en el sistema.&lt;/p&gt;

&lt;h3 id=&quot;windows&quot;&gt;Windows&lt;/h3&gt;
&lt;p&gt;Para instalar &lt;em&gt;Ruby&lt;/em&gt; en &lt;em&gt;Windows&lt;/em&gt; cómo lo hiciéramos en &lt;em&gt;MacOS&lt;/em&gt;, lo mejor será utilizar un gestor de paquetes cómo es &lt;em&gt;Homebrew&lt;/em&gt;. La herramienta en cuestión se llama &lt;a href=&quot;https://chocolatey.org/&quot;&gt;chocolatey&lt;/a&gt;. O si lo prefieres puedes descargar un &lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;instalador&lt;/a&gt; y saltar hasta la siguiente &lt;a href=&quot;#primer-contacto-con-jekyll&quot;&gt;sección&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para instalar chocolatey debes abrir una consola con acceso de administrador. Una vez abierta copia y ejecuta el siguiente comando.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;@powershell -NoProfile -ExecutionPolicy Bypass -Command &lt;span class=&quot;s2&quot;&gt;&quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1 &amp;amp;&amp;amp; SET &quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%PATH%;%ALLUSERSPROFILE%&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;hocolatey&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si todo ha salido bien el resultado será parecido a la imagen inferior.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/jekyll-1.jpg&quot;&gt;
    &lt;img src=&quot;/assets/jekyll-1.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Mensaje de instalación satisfactoria de chocolatey&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 62.32464929859719%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Para poder continuar con el proceso de instalación de &lt;em&gt;Jekyll&lt;/em&gt;, debemos cerrar la consola y reabrirla cómo nos indica el primer &lt;em&gt;warning&lt;/em&gt; en el mensaje anterior. Una vez abierta instalaremos ruby con la siguiente sentencia.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;choco install ruby -y&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si tras ejecutar el comando apareciera un mensaje de error como el siguiente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;Error deserializing response of &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;chocolatey.infrastructure.app.configuration.ConfigFileSettings:
 Root element is missing.
Root element is missing.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Deberemos eliminar un archivo que se ha generado durante la instalación. Este problema es debido a que este archivo se crea vacío y durante su lectura se produce el error. Seguro que en un futuro lo solventarán pero de momento la única solución es eliminarlo. Para ello navegaremos hasta donde se halle al fichero y ejecutaremos el comando &lt;em&gt;del&lt;/em&gt; como se indica debajo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ProgramData&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;hocolatey&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;onfig&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;del &lt;/span&gt;chocolatey.config&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Con esta solución deberíamos poder instalar &lt;em&gt;Ruby&lt;/em&gt; sin problemas. En la siguiente imagen se puede ver el mensaje en caso de que la instalación ha sido satisfactoria.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/jekyll-2.jpg&quot;&gt;
    &lt;img src=&quot;/assets/jekyll-2.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Mensaje de instalación satisfactoria de ruby&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 40.33333333333333%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Por lo visto para que tengan efectos los cambios realizados por &lt;em&gt;chocolatey&lt;/em&gt; debemos cerrar la ventana y reabrirla con permisos de administrador de nuevo.&lt;/p&gt;

&lt;p&gt;El siguiente paso es instalar  &lt;em&gt;bundler&lt;/em&gt; y &lt;em&gt;Jekyll&lt;/em&gt; como hicieramos en &lt;em&gt;MacOS&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;gem install bundler
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;gem install jekyll&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si en este paso, otro error volviera a mostrarse con el siguiente mensaje.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;SSL_connect &lt;span class=&quot;nv&quot;&gt;returned&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;nv&quot;&gt;errno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 &lt;span class=&quot;nv&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;SSLv3 &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;server certificate B: certificate verify failed&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Será necesario instalar manualmente el certificado ya que este ha expirado. En un futuro imagino que lo incluirán en el paquete pero mientras tanto navega a esta &lt;a href=&quot;http://guides.rubygems.org/ssl-certificate-update/&quot;&gt;página&lt;/a&gt; y sigue las instrucciones para solucionarlo. A mí con la sección &lt;em&gt;«Installing using update packages»&lt;/em&gt; me ha bastado para que funcionara.&lt;/p&gt;

&lt;p&gt;Una vez hechos todos estos pasos deberías poder utilizar &lt;em&gt;Jekyll&lt;/em&gt; en &lt;em&gt;Windows&lt;/em&gt; cómo veremos en el resto del taller.&lt;/p&gt;

&lt;h2 id=&quot;primer-contacto&quot;&gt;Primer contacto&lt;/h2&gt;
&lt;p&gt;Cómo indicara anteriomente, Jekyll es un generador de páginas estáticas permitiendonos la creación contenido mediante archivos de texto basados en &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;. Estos archivos serán inyectados en la plantillas HTML previamente definidas. Para poder facilitar la generación de las página web definitiva &lt;em&gt;Jekyll&lt;/em&gt; ofrece una herremienta llamada &lt;em&gt;&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;&lt;/em&gt; para poder cargar contenido de manera dinámica o utilizar ciertas estructuras de control. Pero antes de profundizar en todas las caraterísticas de &lt;em&gt;Jekyll&lt;/em&gt;, veamos como funciona.&lt;/p&gt;

&lt;p&gt;Ya habíamos instalado las herramientas necesarias para que &lt;em&gt;Jekyll&lt;/em&gt; funcionase. Si todavía tienes el terminal abierto, elige el directorio donde quieras instalar la página web que vamos a crear. Una vez estés en el directorio seleccionado ejecuta el siguiente comando.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;jekyll new jekyll-tut&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Al proyecto lo he llamado &lt;em&gt;jekyll-tut&lt;/em&gt; por motivos didácticos pero tú puedes nombrarlo como quieras.&lt;/p&gt;

&lt;p&gt;Cuando el comando haya finalizado, veremos un mensaje indicando que el proyecto se ha instalado correctamente. Tras acceder al nuevo directorio, observaremos una estructura similar a la siguiente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;.
├── Gemfile 
├── Gemfile.lock
├── _config.yml
├── _posts
├── about.md
└── index.md&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Luego explicaré cada uno de los archivos presentes, y no presentes, en la carpeta. Por ahora mejor arranquemos &lt;em&gt;Jekyll&lt;/em&gt; y veamos que se ha generado. Para ello usaremos el siguiente comando (siempre en el mismo directorio).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;jekyll serve&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tras la ejecución del anterior comando han aparecido unos mesajes en la consola. Si nos fijamos en las dos últimas líneas, podremos ver una dirección &lt;em&gt;URL&lt;/em&gt; y una acción de comando.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Server address: http://127.0.0.1:4000/
Server running... press ctrl-c to stop.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;La primera indica la dirección web donde podemos acceder para visitar el sitio web generado. La segunda señala como detener el servidor. Si accedemos al siguiente &lt;a href=&quot;127.0.0.1:4000&quot;&gt;enlace&lt;/a&gt; podremos observar lo que Jekyll ha generado por defecto. La página en concreto será como la siguiente imagen.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/jekyll-3.jpg&quot;&gt;
    &lt;img src=&quot;/assets/jekyll-3.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Página de incio generada automáticamente por Jekyll&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 71.83333333333334%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Voilà!&lt;/em&gt; Esta es la página que &lt;em&gt;Jekyll&lt;/em&gt; ha creado utilizando el tema por defecto llamado &lt;em&gt;&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;minima&lt;/a&gt;&lt;/em&gt;. Estos temas son configurables a través el archivo &lt;em&gt;_config.yml&lt;/em&gt; desde la versión &lt;a href=&quot;https://github.com/jekyll/jekyll/pull/4595&quot;&gt;3.2.0&lt;/a&gt;. Más adelante veremos cómo se puede configurar un tema predefinido y/o modificarlo.&lt;/p&gt;

&lt;p&gt;Todos los enlaces que hay en la página son navegables, por ejemplo si pulsamos sobre el artículo (&lt;em&gt;post&lt;/em&gt;) &lt;em&gt;«Welcome to Jekyll»&lt;/em&gt; nos dirigirá a una página nueva con el contenido del artículo. También hay una suscripción vía &lt;a href=&quot;https://es.wikipedia.org/wiki/RSS&quot;&gt;RSS&lt;/a&gt; y una página &lt;em&gt;about&lt;/em&gt;. Adelante échales un vistazo.&lt;/p&gt;

&lt;h2 id=&quot;cómo-funciona-jekyll&quot;&gt;Cómo funciona &lt;em&gt;Jekyll&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Jekyll está diseñado para que focalicemos nuestra atención en la creación de contenido. De hecho desde su concepción primigenia está orientado para facilitar la creación y mantenimiento de un blog, separando el contenido de la presentación. Para ello hace uso de &lt;em&gt;layouts&lt;/em&gt; (presentación) que definen la disposicón de los elementos. También se pueden crear componentes reutilizables (&lt;em&gt;includes&lt;/em&gt;) cómo pueden ser la cabecera (&lt;em&gt;header&lt;/em&gt;) y el pie de página (&lt;em&gt;footer&lt;/em&gt;). Estos &lt;em&gt;layouts&lt;/em&gt; e &lt;em&gt;includes&lt;/em&gt; están almacenados por convención en los directorios &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_layouts&lt;/code&gt; e &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_includes&lt;/code&gt; respectivamente.&lt;/p&gt;

&lt;p&gt;Puede que ahora te estés preguntando donde están esas carpetas en el proyecto. Haces bien en preguntártelo. Pues bien, si recuerdas el tema &lt;em&gt;minima&lt;/em&gt; es instalado por defecto la primera vez que se crea un proyecto &lt;em&gt;Jekyll&lt;/em&gt;. Este tema provee todos los archivos necesarios para crear un blog. Entre esos archivos se incluyen los directorios &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_layouts&lt;/code&gt; e &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_includes&lt;/code&gt;. Por lo tanto, no hay necesidad de que las carpetas sean incluidas en el proyecto. También cabe la posibilida de crear un proyecto vacío incluyendo la opción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;--blank&lt;/code&gt; cuando se crea un proyecto nuevo.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ls-bundle-show&quot;&gt;&lt;/a&gt;Para ver que archivos contiene el tema &lt;em&gt;minima&lt;/em&gt;, podemos ejecutar uno de los siguientes comandos en consola indicados a continuación.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -l &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;bundle show minima&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Muestra en consola el contenido del directorio&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a name=&quot;open-bundle-show&quot;&gt;&lt;/a&gt;Aunque, si lo prefieres, puedes abrirlo en una ventana de sistema con una de las siguentes instrucciones dependiendo del sistema operativo.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;MacOS&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;open &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;bundle show minima&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Abre una ventana de sistema en MacOS&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Linux&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xdg-open &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;bundle show minima&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# La variante open en Linux&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Windows&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;bundle show minima
/usr/local/lib/ruby/gems/2.3.0/gems/minima-2.1.0
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;explorer /usr/local/lib/ruby/gems/2.3.0/gems/minima-2.1.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a name=&quot;minima-content&quot;&gt;&lt;/a&gt;Una vez ejecutado el comando, encontraremos los siguientes archivos.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;.
├── LICENSE.txt 
├── README.md
├── _includes &lt;span class=&quot;c&quot;&gt;# componentes&lt;/span&gt;
├── _layouts &lt;span class=&quot;c&quot;&gt;# plantillas&lt;/span&gt;
├── _sass &lt;span class=&quot;c&quot;&gt;# estilos&lt;/span&gt;
└── assets &lt;span class=&quot;c&quot;&gt;# resto de elementos usados en la página cómo imágenes, archivos pdf, etcétera.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Cómo podemos comprobar, dentro de las carpetas &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_layouts&lt;/code&gt; e &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_includes&lt;/code&gt; hay una serie de archivos &lt;em&gt;HTML&lt;/em&gt;. Los primeros definen la estructura general del sitio web y los segundos son elementos parciales que pueden reutilizarse tanto en los &lt;em&gt;layouts&lt;/em&gt; como desde cualquier otro archivo. No te preocupes de momento por el resto de carpetas y archivos. Profundizaremos en ellos conforme avance el taller.&lt;/p&gt;

&lt;p&gt;Para poder entender mejor como funcionan en conjunto &lt;em&gt;layouts&lt;/em&gt; e &lt;em&gt;includes&lt;/em&gt;, lo mejor es ver como se utilizan, para ello tomaremos como ejemplo el único artículo creado del blog.&lt;/p&gt;

&lt;h3 id=&quot;composición-de-un-post&quot;&gt;Composición de un &lt;em&gt;Post&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;En la siguiente imagen podemos el artículo que &lt;em&gt;Jekyll&lt;/em&gt; genera como ejemplo.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/jekyll-4.jpg&quot;&gt;
    &lt;img src=&quot;/assets/jekyll-4.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Diferentes secciones de un post&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 94.84396200814112%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Rodeado en verde vemos la sección correspondiente al contenido de la página, el &lt;em&gt;post&lt;/em&gt; en sí mismo. En naranja apreciamos las elementos parciales, &lt;em&gt;includes&lt;/em&gt;. Y por último, en amarillo se indica el contenedor o &lt;em&gt;layout&lt;/em&gt;. Podemos ver que este último contiene al resto de componentes, estableciendo la disposición del conjunto formado por &lt;em&gt;post&lt;/em&gt; e &lt;em&gt;includes&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Ahora que ya sabemos qué es qué en un &lt;em&gt;post&lt;/em&gt;, veamos cómo es el archivo. Para abrirlo, dirijámonos a la siguiente ruta &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_post/2017-02-28-welcome-to-jekyll.markdown&lt;/code&gt;. ¿Lo tienes delante? Bien, veamos como se compone.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;yaml-front-matter&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;yaml-front-matter&quot;&gt;&lt;em&gt;YAML Front Matter&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;Esta sección se la puede consideradar como una cabecera donde se especifican las preferencias particulares e información adicional que Jekyll utilizará para procesar el archivo. Siguiendo como referencia con el &lt;em&gt;post&lt;/em&gt; de ejemplo, la cabecera es la siguiente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Welcome&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Jekyll!&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;2017-02-28 01:01:13 +0100&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jekyll update&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En la figura anterior se puede ver la parte superior del &lt;em&gt;post&lt;/em&gt;. Este fragmento corresponde a la sección llamada &lt;em&gt;YAML Front Matter&lt;/em&gt; y que como su nombre señala, utiliza la sintaxis &lt;a href=&quot;http://yaml.org/&quot;&gt;&lt;em&gt;YAML&lt;/em&gt;&lt;/a&gt;. Cómo más adelante veremos, el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;, donde se deinen las opciones globgenrealesales, hace uso de este mismo formato. Por contra, en el &lt;em&gt;Front Matter&lt;/em&gt; de un &lt;em&gt;post&lt;/em&gt; se establecen las opciones particulares al mismo, sobrescribiendo así lo preferencia definida en el archivo de configuraión global.&lt;/p&gt;

&lt;p&gt;A continucación, en la lista se muestranla descripción de cada una de la opciones específicas de un &lt;em&gt;post&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlight language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;/code&gt;: indica cual es la layout (plantilla) a usar.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlight language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;/code&gt;: título del artículo y de la página.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlight language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;/code&gt;: fecha de publicación.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlight language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;categories&lt;/span&gt;&lt;/code&gt;: categorías a las que pertenece el artículo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Exceptuando &lt;code class=&quot;highlight language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;/code&gt;, el resto de las preferencias son sólo específicas del archivo. Es decir, no se definirían en el &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Es importante recalcar qué para que &lt;em&gt;Jekyll&lt;/em&gt; interprete la sección &lt;em&gt;Front Matter&lt;/em&gt;, esta debe &lt;em&gt;situar al inicio de cada archivo&lt;/em&gt;. Otra peculiaridad, es que todas esta opciones deben ir &lt;em&gt;envueltas entre dos línes de tres guiones (&lt;code class=&quot;highlight language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;&lt;/code&gt;)&lt;/em&gt;. Todo las variables que se encuentren dentro estas dos «líneas» serán utilizadas como opciones particulares.&lt;/p&gt;

&lt;p&gt;El resto del archivo es el contenido como se muestra en la imagen del &lt;em&gt;post&lt;/em&gt;. El formato que se ha utiliza se llama &lt;em&gt;markdown&lt;/em&gt; y al igual que HTML es un lenguaje de marcado ligero pero mucho más legible. No te preocupes si no sabes &lt;em&gt;Markdown&lt;/em&gt;, hay muchos conversores que te facilitarán la tarea de transcribirlos desde un archivo &lt;em&gt;word&lt;/em&gt; o &lt;em&gt;google docs&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Por último, cade señalar que cualquier archivo que contenga esta sección al inicio del mismo será procesado al igual que un &lt;em&gt;post&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;templating-liquid&quot;&gt;&lt;em&gt;Templating (Liquid)&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Si &lt;em&gt;YAML Front Matter&lt;/em&gt; es la cabecera, como es obvio, el resto del archivo será el cuerpo. En esta sección, a parte de redactar el artículo con &lt;em&gt;markdown&lt;/em&gt;, también se pueden incluir sentencias condicionales y funciones aportando un mayor dinamismo al resultado. Estas sentencias son procesadas mediante un motor de plantillas llamado &lt;em&gt;&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;highlight&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ruby&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt; 
def print_hi(name)
  puts &quot;Hi, #{name}&quot;
end
print_hi('Tom')
#=&amp;gt; prints 'Hi, Tom' to STDOUT.
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endhighlight&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En el fragmento superior, las sentencias {% highlight ruby %} y {% endhighlight %} delimitan el contenido del texto que será procesado por &lt;em&gt;Liquid&lt;/em&gt;. En este caso concreto, el resultado generado es el siguiente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;figure&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;highlight&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;code&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;language-ruby&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ruby&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;k&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;def&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nf&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;print_hi&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;p&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;(&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nb&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;name&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;p&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;)&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nb&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;puts&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&quot;Hi, &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;si&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;#{&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nb&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;name&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;si&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&quot;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;k&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;end&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;n&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;print_hi&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;p&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;(&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;s1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;'Tom'&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;p&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;)&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;#=&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt; prints 'Hi, Tom' to STDOUT.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/code&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/figure&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Como vemos el texto inicial es transformado a una serie de etiquetas &lt;em&gt;HTML&lt;/em&gt; para poder ser decorado mediante estilos. Al final, esto es lo que veríamos en el navegador.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Otros ejemplos de sentencias &lt;em&gt;Liquid&lt;/em&gt; serían los siguientes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;relative_url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Cómo bien habremos observado, las etiquetas están envueltas entre los símbolos &lt;strong&gt;{% %}&lt;/strong&gt; y &lt;strong&gt;{{ }}&lt;/strong&gt;. Esto no es sólo por una cuestión estética, los corchetes y porcentajes (&lt;strong&gt;{% %}&lt;/strong&gt;) permiten ejecutar condiciones o funciones, como por ejemplo &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;&lt;/code&gt; o recorrer una lista &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;product&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;collection.products&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;&lt;/code&gt;. Por contra &lt;strong&gt;{{ }}&lt;/strong&gt; devuelve el valor que contenga la propiedad de un objeto o el valor de una variable.&lt;/p&gt;

&lt;p&gt;Hay también un tercer llamado filtro y está representado por &lt;strong&gt;&lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;|&lt;/code&gt;&lt;/strong&gt;. Se utiliza para modificar el valor devuelto por el objeto o variable contenido. En la figura anterior, &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;| relative_url&lt;/code&gt; prefija el valor de &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;post.url&lt;/code&gt; la ruta relativa del sitio web, especificada en el archivo de configuración global, &lt;code class=&quot;highlight language-bash&quot; data-lang=&quot;bash&quot;&gt;_config.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para profundizar en liquid puedes leer la &lt;a href=&quot;https://shopify.github.io/liquid/basics/introduction/&quot;&gt;documentación oficial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A continuación vamos a ver cómo es el &lt;em&gt;layout&lt;/em&gt; que se utilizó en el &lt;em&gt;post&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;layout&quot;&gt;&lt;em&gt;Layout&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Cómo ya se introdujo antes, el &lt;em&gt;layout&lt;/em&gt; contiene la estructura donde se incluirá el contenido procesado del &lt;em&gt;post&lt;/em&gt; que hemos visto en el apartado anterior. Por defecto, este archivo se hallará en la raíz del proyecto bajo la carpeta &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;_layouts&lt;/code&gt; pero como bien podemos ver dicho directorio no existe.&lt;/p&gt;

&lt;p&gt;Ya sabemos que este directorio se encuentra en situado en el directorio donde está instalada la gema &lt;em&gt;minima&lt;/em&gt;, que incluye la estructura y estilo general del sitio web. ¿Pero cómo se importa el archivo? Tranquilos, no es magia, aunque lo desconocido se pueda considerar como tal. &lt;em&gt;Jekyll&lt;/em&gt; primero busca si existe el &lt;em&gt;layout&lt;/em&gt; bajo nuestro proyecto, si no lo encuentra irá a buscarlo bajo el directorio donde se encuentre el tema. Para poder ver el contenido del tema en una ventana de sistema, puedes consultarlo en la &lt;a href=&quot;#open-bundle-show&quot;&gt;sección anterior, dedicada a cómo funciona Jekyll&lt;/a&gt;. De ahora en adelante, me limitaré a usar la versión en terminal.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -l &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;bundle show minima&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;bundle show&lt;/code&gt; retorna la ruta donde se encuentra la gema indicada, en este caso &lt;em&gt;minima&lt;/em&gt; es el nombre de la misma. &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;/code&gt; básicamente ejecuta el comando que se encuentre en su interior,devolviemdo el resultado para poder ser utilizado en otro contexto. En este caso la salida del comando es una ruta que usará la instrucción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;ls&lt;/code&gt; para listar el contenido de la ruta. El resultado lo puedes ver en la siguiente &lt;a href=&quot;#minima-content&quot;&gt;enlace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El nombre del &lt;em&gt;layout&lt;/em&gt; utilizado es &lt;em&gt;post&lt;/em&gt;, por lo tanto buscaremos un archivo con el mismo nombre con la extensión &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.html&lt;/code&gt; dentro del directorio &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_layouts&lt;/code&gt;. En la siguiente figura se muestra el archivo reducido para focalizarnos en lo que ahora nos interesa.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
layout: default
---
&lt;span class=&quot;nt&quot;&gt;&amp;lt;article&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemscope&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemtype=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schema.org/BlogPosting&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  .
  .
  .
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-content&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemprop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;articleBody&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    {{ content }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  .
  .
  .
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En este archivo encontramos dos peculiaridades. La primera es que la sección &lt;em&gt;Front Matter&lt;/em&gt; se hace referencia otro layout. Por lo tanto este archivo no es el contenedor principal sino una parte del conjunto. La segunda es la sentencia &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;. Aquí es donde se embeberá el contenido del archivo que utilice el &lt;em&gt;layout post&lt;/em&gt;. Cómo analogía, podríamos pensar que al igual que en un puzzle infantil que se fuera construyendo de dentro hacia afuera.&lt;/p&gt;

&lt;p&gt;Ahora que sabemos que el otro &lt;em&gt;layout&lt;/em&gt; se llama &lt;em&gt;default&lt;/em&gt;, debemos encontrar un archivo nombrado &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;default.html&lt;/code&gt; dentro de &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_layouts&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  {% include head.html %}

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    {% include header.html %}

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;page-content&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrapper&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        {{ content }}
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;

    {% include footer.html %}

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;¡Al fin! Ya hemos completado el puzzle. Cómo podemos ver, tanto el &lt;code class=&quot;highlight language-html&quot; data-lang=&quot;html&quot;&gt;DOCTYPE&lt;/code&gt; cómo la etiqueta &lt;code class=&quot;highlight language-html&quot; data-lang=&quot;html&quot;&gt;html&lt;/code&gt; están presentes. Como ocurriera en el layout post, este también contiene la sentencia &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;. Aquí es donde se incluirá el &lt;em&gt;layout post&lt;/em&gt; junto con el contenido del &lt;em&gt;post&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;includes&quot;&gt;&lt;em&gt;Includes&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;La etiqueta &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;include&lt;/code&gt; como su significado indica, nos permite incluir el contenido de otro archivo. Al igual que vimos con los layouts &lt;em&gt;Jekyll&lt;/em&gt; buscará primero en el directorio &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_includes&lt;/code&gt; que se encuentre en el directorio de nuestro proyecto, en caso de no hallarlo buscará en el directorio del tema instalado que se esté utilizando.&lt;/p&gt;

&lt;p&gt;Un ejemplo lo podemos encontrar en el &lt;em&gt;layout&lt;/em&gt; &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;default.html&lt;/code&gt;. Esta sentencia incluirá al archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;head.html&lt;/code&gt; en el mismo lugar donde se hallase.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Estos archivos no tiene mayor secreto que, normalmente, ser fragmentos &lt;em&gt;HTML&lt;/em&gt;. Si quieres ver más ejemplos puedes echar un vistazo en la carpeta donde está instaldo el tema &lt;em&gt;minima&lt;/em&gt;. Puedes ver como hacerlo &lt;a href=&quot;#ls-bundle-show&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;parámetros&quot;&gt;Parámetros&lt;/h4&gt;
&lt;p&gt;Otra característica importante de los &lt;em&gt;includes&lt;/em&gt; es la posibilidad de pasarles parámetros. Esto permite crear componentes reutilizables agnósticos al contexto donde se utilicen. También facilita la edición en un contexto &lt;em&gt;Markdown&lt;/em&gt; pudiendo incluir estructuras complejas que en &lt;em&gt;HTML&lt;/em&gt; resultan sencillas (recuerda que un archivo &lt;em&gt;Markdown&lt;/em&gt; se transforma a &lt;em&gt;HTML&lt;/em&gt;).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&amp;lt;figure&amp;gt;
   &amp;lt;a href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;&amp;gt;
   &amp;lt;img src=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; style=&quot;max-width: &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;;&quot;
      alt=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot; /&amp;gt;
   &amp;lt;figcaption&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;caption&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/figcaption&amp;gt;
&amp;lt;/figure&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;El ejemplo superior (extraído de la documentación oficial de &lt;em&gt;Jekyll&lt;/em&gt;) contiene cinco parámetros: &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;url&lt;/code&gt;, &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;file&lt;/code&gt;, &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;max-width&lt;/code&gt;, &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;alt&lt;/code&gt; y &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;caption&lt;/code&gt;. Estos parámetros son automáticamente incluidos como propiedades del objecto &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;include&lt;/code&gt;, creado en el propio contexto del archivo &lt;em&gt;include&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Suponiendo que el ejemplo de la figura anterior pertenece a un archivo nombrado &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;image.html&lt;/code&gt;, los parámetros se pasarían de la siguiente manera.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://jekyllrb.com&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;200px&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;logo.png&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Jekyll logo&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;caption&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;This is the Jekyll logo.&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;crear-un-post&quot;&gt;Crear un &lt;em&gt;post&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Cómo hemos visto, los &lt;em&gt;posts&lt;/em&gt; se encuentran bajo la carpeta &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_posts&lt;/code&gt;. Así que el nuevo archivo será instalado en ese directorio. Pero antes de crearlo, veamos que requisitos debe cumplir el &lt;em&gt;post&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;El nombre del archivo debe tener el siguiente formato &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;YYYY-MM-DD-título.EXT&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;YYYY&lt;/code&gt; corresponde al año,&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;MM&lt;/code&gt; al mes,&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;DD&lt;/code&gt; al día,&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;EXT&lt;/code&gt; es la extensión del archivo (&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.markdown&lt;/code&gt;, &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.md&lt;/code&gt; o &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.html&lt;/code&gt;).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Por último, todo post debe contener al inicio la sección &lt;em&gt;&lt;a href=&quot;#yaml-front-matter&quot;&gt;YAML Front Matter&lt;/a&gt;&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;¡Ya está! No nos hace falta nada más. Bueno sí, necesitaremos un tema sobre el cual escribir aunque para no perder mucho tiempo decidiendo qué y haciendo honor al pragmatismo, en detrimento de la originalidad, utilizaremos el texto &lt;em&gt;lorem ipsum&lt;/em&gt;. De hecho, también lo usaremos como título. Por lo tanto, el archivo tendrá el siguiente nombre.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;2017-03-04-lorem-ipsum.md &lt;span class=&quot;c&quot;&gt;# .md es un alias de .markdown&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Cómo no creo que nadie conozca el texto &lt;em&gt;Lorem ipsum&lt;/em&gt; de memoria, mayormente porque es ininteligible. Para generar el texto utilizaremos el siguiente &lt;a href=&quot;http://es.lipsum.com/&quot;&gt;enlace&lt;/a&gt;. Abajo podemos ver un estracto del &lt;em&gt;post&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-md&quot; data-lang=&quot;md&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Lorem&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ipsum&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2017-03-04 00:15:37 +0100&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lorem&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur sagittis molestie orci, a 
convallis mi cursus ut. Curabitur sit amet enim dolor. Mauris accumsan, ipsum blandit 
ultricies pellentesque, arcu sem viverra est, vitae placerat quam enim a ante.
.
.
.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si el servidor &lt;em&gt;Jekyll&lt;/em&gt; esta corriendo, al guardar el &lt;em&gt;post&lt;/em&gt; se genera automáticamente la página web. Para ver el resultado, abriremos en el navegador la página de inicio de nuestro &lt;em&gt;blog&lt;/em&gt;. Deberíamos ver algo parecido a la imagen siguiente.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/jekyll-5.jpg&quot;&gt;
    &lt;img src=&quot;/assets/jekyll-5.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Página de inicio&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 78.0361757105943%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Como podemos apreciar, hay una nueva entrada en el índice con la fecha correspondiente a la indicada en el &lt;em&gt;Front Matter&lt;/em&gt; del &lt;em&gt;post&lt;/em&gt; que acabamos de editar.&lt;/p&gt;

&lt;p&gt;Por defecto, mientras &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;jekyll serve&lt;/code&gt; está ejecutándose, cualquier cambio realizado en el proyecto, regenera el mismo archivo que haya sido modificado de manera automática. El resultado es almacenado en el directorio &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_site&lt;/code&gt;, lugar desde donde se sirve el sitio web. Este directorio es creado por primera vez cuando ejecutamos &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;jekyll serve&lt;/code&gt; o &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;jekyll build&lt;/code&gt;, siendo regenerado cada vez que uno de estos dos comandos se vuelva ejecutar.&lt;/p&gt;

&lt;p&gt;En caso que el nuevo &lt;em&gt;post&lt;/em&gt; no se mostrase en el índice, podría deberse a que la fecha introducida sea futura, lo que provocaría que &lt;em&gt;Jekyll&lt;/em&gt; lo omitiera hasta se cumpliese tal plazo de tiempo.&lt;/p&gt;

&lt;p&gt;Vayamos a ver ese flamante nuevo artículo que hemos creado. Si pulsamos sobre el enlace del nuevo &lt;em&gt;post&lt;/em&gt; deberíamos ver en el navegador lo siguiente.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/jekyll-6.jpg&quot;&gt;
    &lt;img src=&quot;/assets/jekyll-6.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Nuevo post&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 110.25236593059937%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;¡Excelente! Ahora ya sabemos cómo crear un nuevo artículo. Cómo vemos no ha sido necesario demasiada configuración y gracias a un formato de archivo de marcado ligero como &lt;em&gt;Markdown&lt;/em&gt;, es más sencillo redactar los textos que en &lt;em&gt;HTML&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;En caso de no saber &lt;em&gt;Markdown&lt;/em&gt;, podemos leer este &lt;a href=&quot;https://markdown.es/&quot;&gt;tutorial es castellano&lt;/a&gt;. Si sabemos leer en inglés podemos seguir este otro &lt;a href=&quot;http://www.markdowntutorial.com/&quot;&gt;tutorial interactivo&lt;/a&gt;. Cuando estemos editando un archivo &lt;em&gt;Markdown&lt;/em&gt;, recomiendo tener una «chuleta» a mano como referencia. Un ejemplo de chuleta sería esta &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;página&lt;/a&gt;. Como alternativa podemos utilizar un editor &lt;em&gt;Markdown&lt;/em&gt;, lo cual facilitará la redacción. Hay una lista interesante en el siguiente &lt;a href=&quot;https://markdown.es/editores-markdown/&quot;&gt;enlace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ahora que ya hemos aprendido a escribir artículos, creo que es más fácil entender porque &lt;em&gt;Jekyll&lt;/em&gt; es una herramienta orientada a contenido, facilitando la tarea de edición al poner el foco en la redacción de los textos, mientras que por otro lado, también nos permite organizar y editar el contenedor de manera independiente. En definitiva, Jekyll separa ambos entornos de manera efectiva.&lt;/p&gt;

&lt;p&gt;Para profundizar más sobre la edición de un &lt;em&gt;post&lt;/em&gt; puedes mirar en la &lt;a href=&quot;https://jekyllrb.com/docs/posts/&quot;&gt;documentación oficial&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;borradores&quot;&gt;Borradores&lt;/h3&gt;
&lt;p&gt;Como su propio nombre indica, son archivos en los que estamos trabajando actualmente y todavía no están listos para ser publicados. Un borrador (&lt;em&gt;draft&lt;/em&gt; en inglés) no se diferencia en absoluto de artículo (&lt;em&gt;post&lt;/em&gt;) excepto en los siguientes puntos.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Se hallan en la carpeta &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_drafts&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;No es necesario nombrarlos con la fecha como haríamos con un &lt;em&gt;post&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;_dratfs/artículo-en-proceso.md&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Cuando consideremos que el borrador ha sido finalizado, lo único que deberemos hacer con el archivo es cambiarlo desde &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_drafts&lt;/code&gt; a &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_posts&lt;/code&gt; y modificar el nombre del archivo para que incluya la fecha correspondiente.&lt;/p&gt;

&lt;p&gt;Por último, si queremos visualizar como están quedando los borradores, ejecutaremos el comando &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;jekyll serve&lt;/code&gt; con la siguiente opción.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;jekyll serve --drafts&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;incluir-imágenes-u-otros-archivos-estáticos&quot;&gt;Incluir imágenes u otros archivos estáticos&lt;/h3&gt;
&lt;p&gt;Cualquier blog que se precie no solo contiene texto. Alguna vez querrás incluir alguna imagen o querrás adjuntar enlaces a archivos &lt;em&gt;pdf&lt;/em&gt; o cualquier otro formato. A no ser estos archivos sean suministrados desde un &lt;a href=&quot;https://es.wikipedia.org/wiki/Red_de_entrega_de_contenidos&quot;&gt;CDN&lt;/a&gt;, los tendrás que almacenar en el propio sitio web.&lt;/p&gt;

&lt;p&gt;Cualquier tipo de archivo que no contenga el Front Matter es considerado como un archivo estático. Por lo tanto, imágenes, archivos pdf u de otro tipo son considerados estáticos.&lt;/p&gt;

&lt;p&gt;Para hacer más atractivo el artículo que hemos creado previamente añadiremos una imagen. Podemos descargar haz clic &lt;a href=&quot;https://pixabay.com/es/escalera-berl%C3%ADn-arquitectura-1601133/&quot;&gt;aquí&lt;/a&gt;. Normalmente todo el contenido estático me gusta que quede almacenado en un mismo lugar, facilitando la búsqueda y referenciación de los mismos. Por convención, todo este tipo de archivos suele situarse en una carpeta llamada &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;assets&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si ya hemos descargado la imagen, la colocaremos en &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;assets/img&lt;/code&gt; como puedes ver abajo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;assets/img/staircase-1601133_1920.jpg&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;He decidido mantener el mismo nombre del archivo descargado pero puede ser otro si lo prefieres.&lt;/p&gt;

&lt;p&gt;Para poder insertar la imagen en el &lt;em&gt;post&lt;/em&gt; se debe hacer cómo se especifica en &lt;em&gt;&lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#images&quot;&gt;Markdown&lt;/a&gt;&lt;/em&gt;. El archivo queda como se muestra a continuación.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-md&quot; data-lang=&quot;md&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Lorem&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ipsum&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2017-03-04 00:15:37 +0100&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lorem&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;![&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Staircase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;/assets/img/staircase-1601133_1920.jpg&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;&quot;Staircase&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur sagittis molestie orci, 
a convallis mi cursus ut. Curabitur sit amet enim dolor. Mauris accumsan, ipsum blandit 
ultricies pellentesque, arcu sem viverra est, vitae placerat quam enim a ante.
.
.
.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;El resultado es el siguiente.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/jekyll-7.jpg&quot;&gt;
    &lt;img src=&quot;/assets/jekyll-7.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Artículo con imagen&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 104.97448979591837%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Esto funcionará correctamente si la carpeta &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;assets&lt;/code&gt; está situada en el mismo directorio al que apunta el servidor. En caso de econtrarse en un directorio inferior, no se mostrará la imagen puesto que la ruta suministrada el archivo no referenciará donde se halla realmente. Además, es importante saber que cualquier ruta que comience por &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;/&lt;/code&gt; significa que el archivo se buscará de manera absoluta, es decir desde la raíz del sistema. Tratándose de un servidor será el directorio marcado como contenido web.&lt;/p&gt;

&lt;p&gt;Pongamos un ejemplo para entender esto más claramente. Si el blog se titula &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;http://mi-pagina.com&lt;/code&gt;, nuestro artículo mostrará la imagen correctamente ya que el proyecto colgará desde la misma ruta. Por tanto, la &lt;em&gt;URL&lt;/em&gt; completa sería &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;http://mi-pagina.com/assets/img/staircase-1601133_1920.jpg&lt;/code&gt;. Pero en el caso que el proyecto estivuese alojado en un directorio inferior llamado &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;blog&lt;/code&gt;, donde estarían todos los archivos pertenecientes a nuestro sitio web, la &lt;em&gt;URL&lt;/em&gt; de acceso sería &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;http://mi-pagina.com/blog&lt;/code&gt;. Esto provocaría que la ruta que señala la imagen (y el resto de archivos) no funcionase puesto que sería incorrecta. La nueva ruta debería contener el nombre del directorio donde se halla actualmente: &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;/blog/assets/img/staircase-1601133_1920.jpg&lt;/code&gt;. Conformando la &lt;em&gt;URL&lt;/em&gt; siguiente &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;http://mi-pagina.com/blog/assets/img/staircase-1601133_1920.jpg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Una solución sería actualizar manualmente todas las rutas que hagan referencia a todos los archivos estáticos, pero a parte de ser una tarea tediosa imagina que el volumen de artículos fuese mayor a 100 y al menos cada uno tuviese una imagen. Llevaría demasiado tiempo cambiarlo todo.&lt;/p&gt;

&lt;p&gt;Para solucionar este problema, &lt;em&gt;Jekyll&lt;/em&gt; propone dos opciones. Los filtros &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;relative_url&lt;/code&gt; y &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;absolute_url&lt;/code&gt;. Estos se utilizarán de la siguiente manera.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-md&quot; data-lang=&quot;md&quot;&gt;&lt;span class=&quot;p&quot;&gt;![&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Staircase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;{{“/assets/img/staircase-1601133_1920.jpg”&lt;/span&gt; | relative_url}} “Staircase”)

&lt;span class=&quot;p&quot;&gt;![&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Staircase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;{{“/assets/img/staircase-1601133_1920.jpg”&lt;/span&gt; | absolute_url}} “Staircase”)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Con &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;relative_url&lt;/code&gt;, suponiendo que la subruta fuese &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;/blog&lt;/code&gt;, tras ser procesado el archivo, quedaría de la siguiente manera: &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;/blog/assets/img/staircase-1601133_1920.jpg&lt;/code&gt;. La función principal de este filtro es prefijar la subruta delante de cualquier ruta suministrada. Esta subruta se especifica en el archivo &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;_config.yml&lt;/span&gt;&lt;/code&gt; con la opción &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;baseurl&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;absolute_url&lt;/code&gt; haría lo mismo pero con la ruta completa: &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;http://mi-pagina.com/blog/assets/img/staircase-1601133_1920.jpg&lt;/code&gt;. Al igual que relative_url también puede ser configurado desde &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;. La diferencia entre ambos métodos es que &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;absolute_url&lt;/code&gt; utiliza dos opciones: &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;url&lt;/span&gt;&lt;/code&gt; y &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;baseurl&lt;/span&gt;&lt;/code&gt;. Concatenando respectivamente los valores cada opción se conforma la &lt;em&gt;url&lt;/em&gt; absoluta.&lt;/p&gt;

&lt;p&gt;Cualquiera de las dos opciones son válidas. Utiliza la que consideres más apropiada. Personalmente suelo utilizar &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;relative_url&lt;/code&gt; así no tengo que incluir el nombre del dominio en el &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;, lo cual me proporciona un proyecto agnóstico del dominio que vaya a utilizar. Aunque realmente poco importa, puesto que cada vez que ejecutemos &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;jekyll build&lt;/code&gt; todas las ruta son contruidas mientras se utilice una de los dos métodos.&lt;/p&gt;

&lt;h2 id=&quot;crear-una-página&quot;&gt;Crear una página&lt;/h2&gt;
&lt;p&gt;Además de crear artículos también se puede crear páginas estáticas. A diferencia de los &lt;em&gt;posts&lt;/em&gt;, estas son independientes de la fecha de publicación y la categoría. Exceptuando estos dos requisitos, el resto de opciones de configuración son los mismas.&lt;/p&gt;

&lt;p&gt;Podemos crear todas las páginas que deseemos y almacenarlas en cualquier lugar del proyecto. No importa si están en directorios inferiores puesto que la misma estructura de carpetas es replicada en el directorio de salida tras ser procesado por &lt;em&gt;Jekyll&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A continuación podemos ver la relación de páginas estáticas en el proyecto con su correspondiente &lt;em&gt;url&lt;/em&gt; asociada.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;.
├── _config.yml
├── _posts/
├── _site/
├── about.md      &lt;span class=&quot;c&quot;&gt;# =&amp;gt; http://mi-pagina.com/about.html&lt;/span&gt;
├── index.md      &lt;span class=&quot;c&quot;&gt;# =&amp;gt; http://mi-pagina.com/&lt;/span&gt;
└── lorem.html    &lt;span class=&quot;c&quot;&gt;# =&amp;gt; http://mi-pagina.com/lorem.html&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Como bien podemos comprobar, el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;lorem.html&lt;/code&gt; no existe todavía, así que  vamos a crearlo. Este archivo contendrá un listado con todos los &lt;em&gt;posts&lt;/em&gt; que pertenezcan a la categoría lorem, que definimos al crear el anterior artículo. Para ello, tomaremos prestada la estructura definida en la página de inicio (&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;index.md&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Al abrir el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;index.md&lt;/code&gt; observaremos que está vacío. Si bien recordamos, los &lt;em&gt;layouts&lt;/em&gt; nos proveen de un marco contenedor, por lo tanto aunque el archivo no contenga nada, debemos suponer que el &lt;em&gt;layout&lt;/em&gt; indicado compone este listado automáticamente. En este caso el &lt;em&gt;layout&lt;/em&gt; es &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;home&lt;/span&gt;&lt;/code&gt;. Podemos ver que contiene con el siguiente comando.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;bundle show minima&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/_layouts/home.html&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A continuación se muestra como queda el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;lorem.html&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
layout: page
title: Lorem
permalink: /lorem/
---
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-list&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
{% for post in site.categories.lorem %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-meta&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{post.date | date: &quot;%b %-d, %Y&quot;}}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{post.title | escape}}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
{% endfor %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;La dos diferencias fundamentales con &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;index.md&lt;/span&gt;&lt;/code&gt; es la extensión del archivo y el &lt;em&gt;layout&lt;/em&gt; utilizado. En este caso hemos usado un archivo &lt;em&gt;HTML&lt;/em&gt; ya que nos permite ajustar mas al detalle que un &lt;em&gt;Markdown&lt;/em&gt;. Por otro el layout es &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;page&lt;/span&gt;&lt;/code&gt;. En caso de haber usado el &lt;em&gt;layout&lt;/em&gt; &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;home&lt;/span&gt;&lt;/code&gt;, se mostrarían dos listados: en primer lugar el que acabamos de crear y justo debajo el mismo que muestra la página de inicio. Para evitar este incoveniente usaremos el layout &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;page&lt;/span&gt;&lt;/code&gt; que es el mismo que se define en &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;about.md&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si todo ha sido salido correctamente, en la barra de navegación veremos un nuevo enlace con el nombre lorem.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/jekyll-8.jpg&quot;&gt;
    &lt;img src=&quot;/assets/jekyll-8.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Cabecera y barra de navegación&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 7.4375%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;Y el resultado de la página es el siguiente.&lt;/p&gt;

&lt;figure&gt;
  &lt;div class=&quot;placeholder&quot; data-large=&quot;/assets/jekyll-9.jpg&quot;&gt;
    &lt;img src=&quot;/assets/jekyll-9.thumb.jpg&quot; class=&quot;img-small loaded&quot; alt=&quot;Imagen de la página mostrando las catageríos lorem&quot; /&gt;
    &lt;div style=&quot;padding-bottom: 57.333333333333336%;&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;¡Genial! Ya tenemos una nueva página creada. Para ver que todo funciona correctamente, te invito a que crees una nueva página bajo la categoría lorem. Verás como automáticamente aparecerá listada aquí.&lt;/p&gt;

&lt;h3 id=&quot;variables&quot;&gt;Variables&lt;/h3&gt;
&lt;p&gt;Durante las secciones anteriores hemos estado usando una serie de variables. Estas variables son recopiladas desde el &lt;em&gt;Front Matter&lt;/em&gt; y el archivo de configuración global (&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;) por &lt;em&gt;Jekyll&lt;/em&gt;, haciéndolas accesibles a través del sistema de plantillas &lt;em&gt;Liquid&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Un ejemplo de esto es la siguiente sentencia que devolverá todos los artículos pertenecientes a la categoría &lt;em&gt;lorem&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;post&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.categories.lorem&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En este otro ejemplo desde la variable &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;post&lt;/code&gt; se recupera la &lt;em&gt;URL&lt;/em&gt; y el título definido en el &lt;em&gt;post&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{post.url | relaative_url}}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{post.title | escape}}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Podemos ver la relación completa de estas variables que &lt;em&gt;Jekyll&lt;/em&gt; provee en el siguiente &lt;a href=&quot;http://jekyllrb.com/docs/variables/&quot;&gt;enlace&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;permalinks&quot;&gt;&lt;em&gt;Permalinks&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Los &lt;em&gt;permalinks&lt;/em&gt; hacen referencia a la &lt;em&gt;URL&lt;/em&gt; permenente de los &lt;em&gt;posts&lt;/em&gt; o páginas del blog. &lt;em&gt;Jekyll&lt;/em&gt; nos permite configurar cual será esta &lt;em&gt;URL&lt;/em&gt; a través de la opción &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;permalink&lt;/span&gt;&lt;/code&gt; mediante el uso de plantillas &lt;em&gt;URL&lt;/em&gt; o utilizando un nombre acorde a la especificación &lt;em&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-2&quot;&gt;URI&lt;/a&gt;&lt;/em&gt; (sin espacios ni diacríticos). Para configurarlo se usaremos la siguiente opción.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;variable|estilo|título_que_desees&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Cómo es de suponer, esta opción se puede incluir en el archivo de configuración global, &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;, o en el &lt;em&gt;Front Matter&lt;/em&gt; al archivo pertinente. Recordemos que la opción &lt;em&gt;Front Matter&lt;/em&gt; prevalece ante la configuración global. &lt;em&gt;Front Matter&lt;/em&gt; no acepta el uso de plantillas &lt;em&gt;URL&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Por defecto, &lt;em&gt;Jekyll&lt;/em&gt; utiliza el siguiente la siguiente plantilla.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/:categories/:year/:month/:day/:title.html&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Todas los &lt;em&gt;posts&lt;/em&gt; del blog tendrán este formato. De hecho este estilo de &lt;em&gt;permalink&lt;/em&gt; puede ser modificado por una plantilla predefinida mediante la variable &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;/code&gt; como se muestra a continuación. Podemos consultar todos las variables &lt;a href=&quot;https://jekyllrb.com/docs/permalinks/#template-variables&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;El valor de &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;/code&gt; equivale a &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;/:categories/:year/:month/:day/:title.html&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Personalmente no me gusta este formato de &lt;em&gt;permalink&lt;/em&gt;, así que lo vamos a cambiar por algo más corto y recordable. Abajo podemos ver un ejemplo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/artículos/:title&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si configuramos esta opción en el &lt;em&gt;Front Matter&lt;/em&gt; de artículo que hemos creado la &lt;em&gt;URL&lt;/em&gt; será la siguiente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;127.0.0.1:4000/articulos/lorem-ipsum&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Esto también modificará el lugar de salida del archivo, situándose bajo la carpeta &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;articulos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si esta opción es configurada en el &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;, se atribuirá a todos los &lt;em&gt;posts&lt;/em&gt;. Abajo podemos ver el resultado del directorio de salida tras cambiar el &lt;em&gt;permalink&lt;/em&gt; global.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;_site
├── about
│   └── index.html
├── articulos
│   ├── lorem-ipsum-2.html
│   ├── lorem-ipsum.html
│   └── welcome-to-jekyll.html
├── assets
│   ├── img
│   │   └── staircase-1601133_1920.jpg
│   └── main.css
├── feed.xml
├── index.html
├── lorem
│   └── index.html
└── res.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Para saber más, podemos consultar este &lt;a href=&quot;https://jekyllrb.com/docs/permalinks/&quot;&gt;enlace&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;configuración&quot;&gt;Configuración&lt;/h2&gt;
&lt;p&gt;Ahora que ya hemos visto cómo funciona jekyll y cómo crear nuevos artículos y páginas, es hora de saber como se configura. Como vimos antes, en cada uno de &lt;em&gt;post&lt;/em&gt; o página podemos especificar las opciones en el &lt;em&gt;YAML Front Matter&lt;/em&gt; de manera individual. ALgunas opciones como &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;title&lt;/code&gt; solo pueden ser declaradas en esta sección. Pero otras se pueden incluir en el archivo de configuración general, &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Este archivo se halla en la raíz del proyecto. Si no se ha modificado el contenido del archivo es el siguiente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Your awesome title&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;your-email@domain.com&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# this means to ignore newlines until &quot;baseurl:&quot;&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Write an awesome description for your new site here. You can edit this&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;line in _config.yml. It will appear in your document head meta (for&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Google search results) and in your feed.xml site description.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# the subpath of your site, e.g. /blog&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# the base hostname &amp;amp; protocol for your site, e.g. http://example.com&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;twitter_username&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jekyllrb&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;github_username&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;jekyll&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Build settings&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kramdown&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;minima&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jekyll-feed&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Gemfile&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Gemfile.lock&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Principalmente las opciones se dividen en dos grupos: las relativas al &lt;em&gt;Front Matter&lt;/em&gt; y las que &lt;em&gt;Jekyll&lt;/em&gt; utilizará para configurar y construir la página web.&lt;/p&gt;

&lt;p&gt;En el primer grupo se encontrarían las opciones como que &lt;em&gt;layouts&lt;/em&gt; deben utilizarse en todos los &lt;em&gt;posts&lt;/em&gt; o el &lt;em&gt;permalink&lt;/em&gt; global. Esto evitará que tengamos que incluir estas preferencias en el &lt;em&gt;Front Matter&lt;/em&gt; de cada archivo ya que &lt;em&gt;Jekyll&lt;/em&gt; lo incluirá por nosotros de manera automática.&lt;/p&gt;

&lt;p&gt;Estas opciones se pueden incluir por tipos de archivo como se muestra en la siguiente figura.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;posts&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;post&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Con las opciones anteriores estaremos diciendo a &lt;em&gt;Jekyll&lt;/em&gt; que el &lt;em&gt;layout&lt;/em&gt; por defecto para todos lo artículos sea &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;post.html&lt;/code&gt;. Cada uno de los &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;scope&lt;/span&gt;&lt;/code&gt; definidos hace referencia al conjunto de archivos filtrados por su tipo (&lt;em&gt;posts&lt;/em&gt;, &lt;em&gt;pages&lt;/em&gt;, etcétera). &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;/code&gt; aplicará las preferencias definidas por scope sólo a los archivos que se encuentren bajo la ruta especificada (relativa al proyecto). Si &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;/code&gt; se deja vacío, las preferencias serán aplicadas en todo el proyecto.&lt;/p&gt;

&lt;p&gt;Como alternativa, no hace falta escribir la opción y dejarla vacía, simplemente con no incluirla también funcionará. En el siguiente ejemplo podemos ver cómo queda las opciones eliminando las vacías. También se incorpora las páginas.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;posts&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/articulos/:title&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pages&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;page&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Una vez aplicados estos cambios, las opciones &lt;em&gt;layout&lt;/em&gt; pueden ser borradas de los respectivos archivos. Cómo vimos en la sección &lt;a href=&quot;#permalinks&quot;&gt;permalinks&lt;/a&gt;, la opción específica (&lt;em&gt;Front Matter&lt;/em&gt;) prevalece ante la global (&lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;) por tanto estas preferencias pueden ser sobreescritas en cada archivo.&lt;/p&gt;

&lt;p&gt;En el ejemplo anterior también se puede ver la opción &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/articulos/:title&lt;/span&gt;&lt;/code&gt; conenido dentro del ámbito de los &lt;em&gt;posts&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Otra característica interesante de este archivo de configuración general es poder declarar tantas opciones como así deseemos. Unos ejemplos son las opciones &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;/code&gt;, &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;description&lt;/span&gt;&lt;/code&gt;, &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;twitter_username&lt;/span&gt;&lt;/code&gt; o &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;email&lt;/span&gt;&lt;/code&gt;. Así que si necesitas el uso de alguna variable global, no dudes en crearlas en &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;. Todas estas opciones están disponibles en la variable global &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;site&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Podemos ver un ejemplo de uso de la &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;site.variable&lt;/span&gt;&lt;/code&gt; title en el &lt;em&gt;include&lt;/em&gt; header.html del tema &lt;em&gt;minima&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”site-title”&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”{{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“/”&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;relative_url&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;}}”&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ site.title | escape }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;El resto de preferencias pertenecen a cómo &lt;em&gt;Jekyll&lt;/em&gt; procesa el proyecto. Entre estas se encuentran opciones como modificiar el directorio de entrada y salida del proyecto, añadir &lt;a href=&quot;https://jekyllrb.com/docs/plugins/&quot;&gt;plugins&lt;/a&gt; o cambiar las opciones del servidor local. Te recomiendo que les eches un vistazo en la &lt;a href=&quot;https://jekyllrb.com/docs/configuration/&quot;&gt;página oficial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nota importante&lt;/strong&gt;. Debemos tener en cuenta que cualquier modificación realizada en  &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt; requiere que el servidor sea reiniciado para utilizar los nuevos cambios.&lt;/p&gt;

&lt;h3 id=&quot;variables-de-entorno&quot;&gt;Variables de entorno&lt;/h3&gt;
&lt;p&gt;En ocasiones hay ciertos contenidos que queremos que solo se muestren en un entorno de desarrollo como los &lt;em&gt;logs&lt;/em&gt;. También podemos querer incluir una librería analítica, como &lt;em&gt;google analytics&lt;/em&gt;, cuando la página esté en producción. Para conseguir esto, &lt;em&gt;Jekyll&lt;/em&gt; provee una variable de entorno llamada &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;JEKYLL_ENV&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Por defecto esta variable se establece como el valor &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;development&lt;/code&gt; (desarrollo). La otra opción es &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;production&lt;/code&gt; (producción). Aunque jekyll utiliza estos dos valores por convención, podemos definir tantos como deseemos.&lt;/p&gt;

&lt;p&gt;Un ejemplo de esto lo podemos encontrar dentro del tema &lt;em&gt;minima&lt;/em&gt;. Si abrimos el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_includes/head.html&lt;/code&gt; veremos las siguientes líneas al final del mismo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;if jekyll.environment == 'production' and site.google_analytics %&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;include google-analytics.html %&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endif %&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En este caso, se comprueba si la variable de entorno es &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;production&lt;/code&gt;` y si en la configuración general ha sido establecida la opción &lt;code class=&quot;highlight language-liquid&quot; data-lang=&quot;liquid&quot;&gt;google_analytics&lt;/code&gt; con el id como valor. Si bien recordamos, cualquier opción puede ser declarada en &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;. Por lo tanto si queremos incluir esta librería, tendremos que declarar la variable y cambiar &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;JEKYLL_ENV&lt;/code&gt; a &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;production&lt;/code&gt;. Para poder modificarla podemos ejecutar el comando build de la siguiente manera.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production jekyll build&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Otra característica importante en &lt;em&gt;Jekyll&lt;/em&gt; es poder definir varios archivos de configuración. Estos pueden ser usarlos individualmente o en conjunto. Para ello incluirá la opción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;--config&lt;/code&gt; seguida del archivo o archivos (separados por comas) que deseemos utilizar.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;jekyll build --config&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;_config.yml,_config.prod.yml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Es importante tener en cuenta el orden en que se insertan los archivos. Una misma opción establecida en los dos archivos del ejemplo anterior, tendrá el valor del último archivo concatenado.&lt;/p&gt;

&lt;h2 id=&quot;temas-themes&quot;&gt;Temas (&lt;em&gt;Themes&lt;/em&gt;)&lt;/h2&gt;
&lt;p&gt;Durante todo el taller hemos estado viendo referencias al tema &lt;em&gt;minima&lt;/em&gt;. Si has seguido el tutorial hasta aquí, sabrás de sobra que este tema se incluye por defecto cada vez que se crea un proyecto nuevo. Este tema se instala junto con el resto de gemas de &lt;em&gt;Ruby&lt;/em&gt;. Puedes ver como se accede al contenido de esta gema &lt;a href=&quot;#ls-bundle-show&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Puede que nos preguntemos ¿porqué incluir las plantillas y estilos en una librería externa? Y está bien que nos hagas esta pregunta sobre todo teniendo en cuenta que esta caraterística se incluye a partir de la versión &lt;a href=&quot;https://jekyllrb.com/news/2016/07/26/jekyll-3-2-0-released/&quot;&gt;3.2&lt;/a&gt;, pues anterior a esta versión el tema se incluía junto al resto de archivos en el proyecto.&lt;/p&gt;

&lt;p&gt;La principal ventaja, en el caso que decidamos usar el tema &lt;em&gt;minima&lt;/em&gt; o unos de los disponibles, es que estas gemas son mantenidas por una comunidad de desarrolladores. Por lo tanto, cada vez que haya una actualización donde se añaden nuevas características o mejoras, estas se instalarán automáticamente cada vez que ejecutemos el comando &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;bundle update&lt;/code&gt;. También se pueden actualizar individualmente incluyendo el nombre de la gema al final del mismo comando: &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;bundle update minima&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;instalar-un-tema&quot;&gt;Instalar un tema&lt;/h3&gt;
&lt;p&gt;A parte de &lt;em&gt;minima&lt;/em&gt; podemos instalar otros temas. Por convención todos los temas tienen el siguiente formato: &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;jekyll-theme-nombre&lt;/code&gt;. Podemos encontrar todos los disponibles en la de &lt;em&gt;&lt;a href=&quot;https://rubygems.org/search?utf8=%E2%9C%93&amp;amp;query=jekyll-theme&quot;&gt;RubyGems&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Para exponer como se instala un tema he elegido &lt;a href=&quot;https://github.com/pages-themes/cayman&quot;&gt;cayman&lt;/a&gt;. Para instalarlo recomiendo crear un nuevo proyecto &lt;em&gt;Jekyll&lt;/em&gt; evitando que se ejecute &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;bundle install&lt;/code&gt;. Para ello incluiremos la opción &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;--skip-bundle&lt;/code&gt;. Todas la librerías asociadas al proyecto no serán instaladas, entre ellas el propio tema &lt;em&gt;minima&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;jekyll new --skip-bundle nuevo-proyecto&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tras esto se deben modificar los archivos &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;Gemfile&lt;/code&gt; y &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;. En el primero, buscaremos la línea que contenga la sentencia &lt;code class=&quot;highlight language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;minima&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~&amp;gt; 2.0&quot;&lt;/span&gt;&lt;/code&gt; y se cambia por &lt;code class=&quot;highlight language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-theme-cayman&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~&amp;gt; 0.0.3&quot;&lt;/span&gt;&lt;/code&gt;. En el segundo, modificaremos la opción &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;minima&lt;/span&gt;&lt;/code&gt; por &lt;code class=&quot;highlight language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jekyll-theme-cayman&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tras estos pasos, ejecutaremos el comando &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;bundle install&lt;/code&gt; manualmente para instalar todas las dependecias del proyecto junto con el nuevo tema.&lt;/p&gt;

&lt;p&gt;Para poder ver cómo luce el nuevo tema, ejecutaremos el servidor con la instrucción &lt;em&gt;Jekyll serve&lt;/em&gt;. Pero como veremos, ocurre un error. Esto es debido a que el archivo &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;about.md&lt;/code&gt; está incluyendo un archivo perteneciente al tema minima que ahora no existe. El error mostrado es el siguiente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Liquid Exception: Could not locate the included file &lt;span class=&quot;s1&quot;&gt;'icon-github.html'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;any of
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Users/enric/Workspace/jekyll-tut/cayman/_includes&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;. Ensure it exists &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;one of those 
directories and, &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;it is a symlink, does not point outside your site source. &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;about.md&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Para solucionarlo, debemos editar el archivo en cuestión y borrar las líneas donde se incluya ese archivo. A continuación volvemos a ejecutar el servidor y el proyecto se compilará correctamente. Para verlo, accederemo al siguiente enlace: http://127.0.0.1:4000.&lt;/p&gt;

&lt;p&gt;Pero veremos que algo extraño sigue sucediendo. El navegador muestra una página en blanco. La causa de esto es debido a que &lt;em&gt;minima&lt;/em&gt; incluía un &lt;em&gt;layout&lt;/em&gt; que proporcionaba todo el contenido de la página de inicio. Así que para que este nuevo tema funcione correctamente, se deben crear las plantillas necesarias.&lt;/p&gt;

&lt;p&gt;A estas alturas del taller, considero que podrías crear los archivos tú mismo. De hecho te lo recomiendo encarecidamente, es la mejor forma de aprender. Aunque si tuvieses dudas o necesitas ver algunos ejemplos, puedes descargar los fuentes usados en este taller desde &lt;a href=&quot;https://github.com/emoriarty/jekyll-tut&quot;&gt;github&lt;/a&gt;. Dentro de la carpeta &lt;em&gt;cayman&lt;/em&gt; están los archivos usados en esta sección. Vuelvo a insistir que vale la pena que los escribas aunque sea copiándolo a que pegues el archivo directemente.&lt;/p&gt;

&lt;p&gt;También podemos encontrar otros temas en diferentes páginas cómo los ejemplos que incluyo a continuación.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://themes.jekyllrc.org/&quot;&gt;themes.jekyllrc.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;jekyllthemes.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllthemes.io/&quot;&gt;jekyllthemes.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Es importante saber que estos no se instalarán como una gema al igual que hicieramos anteriormente. Normalmente se ofrecen cómo un archivo comprimido que incluirá todos los recursos necesarios para iniciar un proyecto desde cero. La principal diferencia con los temas basados en gemas es que se pierde la ventaja de actualización automática, aunque todos los archivos estarán disponibles en el mismo directorio del proyecto.&lt;/p&gt;

&lt;h3 id=&quot;sobrescribir-el-tema&quot;&gt;Sobrescribir el tema&lt;/h3&gt;
&lt;p&gt;Puede que el tema que hayamos elegido al principio nos sirva para la finalidad de nuestro sitio web, pero probablemente, en un momento determinado deseemos extenderlo agregando nuevos estilos o modificando los &lt;em&gt;layouts&lt;/em&gt; existentes. Esto es relativamente sencillo, para ello localizaremos cual es el archivo en cuestión para sobrescribir en la carpeta del tema. A continuación, crearemos un archivo con el mismo nombre y lo situaremos en el mismo lugar donde se halle el original en nuestro proyecto. Tras esto ya podremos editar el nuevo archivo.&lt;/p&gt;

&lt;p&gt;Esto es debido a que &lt;em&gt;Jekyll&lt;/em&gt; busca primero los archivos en el directorio donde se situa el proyecto. En caso de no hallarlos los intenta localizar en la carpeta donde el tema está instalado.&lt;/p&gt;

&lt;p&gt;Supongamos que queremos agregar una serie de estilos nuevos en nuestra página. Al abrir el directorio donde está instalado el tema, observamos que el estilo principal se encuentra en la siguiente ruta relativa al tema: &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;assets/css/style.scss&lt;/code&gt;. Sabiendo esto, debemos crear el mismo archivo bajo la misma ruta en nuestro proyecto. Cuando este se haya reconstruido, utilizará el &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;style.scss&lt;/code&gt; ubicado en en el proyecto.&lt;/p&gt;

&lt;p&gt;Aunque esto tiene un inconveniente: los estilos originales los habremos perdido. Para solucionar este problema deberemos editar este nuevo archivo y añadir la siguiente sentencia.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sass&quot; data-lang=&quot;sass&quot;&gt;&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;site.theme&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;}}&quot;;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Agrega&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;aqu&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tus&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;nuevos&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;estilos&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Con la anterior línea, estaremos indicando a &lt;em&gt;Jekyll&lt;/em&gt; que incluya la ruta donde se encuentra el archivo original para que preprocesador de estilos lo pueda importar. Si te has fijado bien, las dos primera líneas son tres guiones consecutivos, esto permite a &lt;em&gt;Jekyll&lt;/em&gt; saber que archivo deben ser procesados.&lt;/p&gt;

&lt;p&gt;Por defecto, &lt;em&gt;Jekyll&lt;/em&gt; soporta &lt;em&gt;&lt;a href=&quot;http://sass-lang.com/&quot;&gt;SASS&lt;/a&gt;&lt;/em&gt; como generador de estilos, aunque si lo preferimos siempre podemos usar &lt;em&gt;CSS&lt;/em&gt;. De hecho, incluso, podemos usar ambos formatos.&lt;/p&gt;

&lt;p&gt;De la misma manera sobrescribiremos un &lt;em&gt;layout&lt;/em&gt; o &lt;em&gt;include&lt;/em&gt;. La única diferencia es que una vez sobrescrito no habrá manera de poder importarlo como hicimos con los estilos.&lt;/p&gt;

&lt;p&gt;Cómo colofón a esta sección, sólo me queda mencionar que podemos crear nuestro propio tema y publicarlo para compartirlo con otros desarrolladores. Aunque por la finalidad del artículo este tema no puede ser tratado, si te interesa puedes saber más en el siguiente &lt;a href=&quot;https://jekyllrb.com/docs/themes/#creating-a-gem-based-theme&quot;&gt;enlace&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;assets&quot;&gt;&lt;em&gt;Assets&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Durante todo el taller hemos visto que todos los archivos que &lt;em&gt;Jekyll&lt;/em&gt; encuentra en el proyecto son procesados si estos llevan al inicio del mismo dos líneas de guiones y son situados en el directorio de salida (por defecto &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_site&lt;/code&gt;, aunque esto se puede modicar en el &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt;). También hemos visto que los archivos que empiecen por un guión bajo (_) son omitidos en el resultado de salida. ¿Pero qué pasa con el resto?&lt;/p&gt;

&lt;p&gt;El resto de archivos se incluyen en el sitio web resultante. Por lo tanto, todos los recursos como imágenes, estilos y archivos &lt;em&gt;Javascript&lt;/em&gt; son importados intactos para su uso. Normalmente por convención estos archivos se situan en el directorio &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;assets&lt;/code&gt; aunque los podemos ubicar donde queramos.&lt;/p&gt;

&lt;h3 id=&quot;sass&quot;&gt;Sass&lt;/h3&gt;
&lt;p&gt;Cómo ya mencioné en el apartado anterior, &lt;em&gt;Jekyll&lt;/em&gt; incorpora soporte para &lt;em&gt;Sass&lt;/em&gt;. Como en todo archivo que &lt;em&gt;Jekyll&lt;/em&gt; debe procersar, se deben incluir las dos líneas de tres guiones reglamentarias. Aunque no es necesario incluir estas en el resto de archivos parciales que importan a través de &lt;em&gt;Sass&lt;/em&gt;. La extensión de estos archivos puede ser &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.scss&lt;/code&gt; o &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;.sass&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Estos archivos parciales deberán estar situados, una vez más por convención, bajo una carpeta nombrada &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_sass&lt;/code&gt; y que colgará en la raíz del proyecto. &lt;em&gt;Jekyll&lt;/em&gt; utiliza esta carpeta para «decirle» a &lt;em&gt;Sass&lt;/em&gt; donde encontrar los archivos importados. Por supuesto, esta opción puede ser modificada en el &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;_config.yml&lt;/code&gt; de la siguiente forma.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;sass&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;sass_dir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_sass&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;compressed&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Cómo podemos ver, también se puede especificar el estilo de salida de los nuevos archivos &lt;em&gt;CSS&lt;/em&gt;. En este caso los archivos serán comprimidos.&lt;/p&gt;

&lt;p&gt;Para ilustrar mejor este proceso supongamos que tenmos la siguiente estructura de carpetas.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;├── _sass
│   ├── _typography.scss
│   ├── _colors.scss
│   └── _welcome-to-jekyll.html
└──css
    ├── main.scss
    └── print.scss&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tras ser compilado, el contenido de los archivos parciales que hayan sido importados, es agregado en los archivos principales (los que contienen las dos líneas con tres guiones, en este caso &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;main.scss&lt;/code&gt;) y &lt;code class=&quot;highlight language-shell&quot; data-lang=&quot;shell&quot;&gt;print.scss&lt;/code&gt;). El resultado será tal y como se muestra abajo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;_site
└── css
    ├── main.css
    └── print.css&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En el este &lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/tree/master/example&quot;&gt;enlace&lt;/a&gt; podemos encontrar un ejemplo sobre este proceso.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Llegados a este punto del taller y con el conocimiento adquirido, deberías poder utilizar &lt;em&gt;Jekyll&lt;/em&gt; con cierta soltura. Por supuesto, se que me dejo mucho en el tintero como las &lt;a href=&quot;https://jekyllrb.com/docs/collections/&quot;&gt;colecciones&lt;/a&gt;, los &lt;a href=&quot;[jekyll-collections]&quot;&gt;archivos de datos&lt;/a&gt;, los &lt;em&gt;&lt;a href=&quot;https://jekyllrb.com/docs/plugins/&quot;&gt;plugins&lt;/a&gt;&lt;/em&gt; o la &lt;a href=&quot;https://jekyllrb.com/docs/pagination/&quot;&gt;paginación&lt;/a&gt; pero he considerado este artículo como una introducción a &lt;em&gt;Jekyll&lt;/em&gt; y por tanto el contenido incluido en el taller es más que suficiente para empezar. De hecho, no he incluido esas y otras &lt;em&gt;features&lt;/em&gt; por no considerarlas necesarias para la construcción de un blog.&lt;/p&gt;

&lt;p&gt;De todas formas, si deseas saber más sobre la herramienta tras estas líneas he incluido una serie de enlaces a los recursos utilizados para elaborar este texto y que puedes usar para ampliar conocimiento.&lt;/p&gt;

&lt;p&gt;Te vuelvo a recordar que peudes descargar desde github el &lt;a href=&quot;https://github.com/emoriarty/jekyll-tut&quot;&gt;código fuente&lt;/a&gt; usado para elaborar este taller y que también puede servirte de ayuda.&lt;/p&gt;

&lt;h2 id=&quot;fuentes&quot;&gt;Fuentes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyllrb.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jekyll.tips/&quot;&gt;jekyll.tips&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://css-tricks.com/building-a-jekyll-site-part-1-of-3/&quot;&gt;Building a jekyll site&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;pages.github.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/creating-project-pages-using-the-command-line/&quot;&gt;Creating project pages using the command line&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;Markdown cheatsheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://sass-lang.com/guide&quot;&gt;Sass guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://davidburela.wordpress.com/2015/11/28/easily-install-jekyll-on-windows-with-3-command* -prompt-entries-and-chocolatey/&quot;&gt;Jekyll on windows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ben.balter.com/2015/02/20/jekyll-collections/&quot;&gt;Jekyll collections&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="jekyll" /><category term="web" /><category term="ui" /><category term="blog" /><category term="tutorial" /><category term="temas" /><summary type="html">Tutorial sobre como poder crear un blog o sitio web mediante Jekyll. Es necesario tener unos conocimientos mínimos en programación.</summary></entry></feed>